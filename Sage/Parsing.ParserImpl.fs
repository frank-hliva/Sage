// Implementation file for parser generated by fsyacc
module Sage.Parsing.ParserImpl
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"


(* Parser specification for Sage Language *)
open Sage
open Sage.Parsing
open Sage.Parsing.Checks

# 14 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LAMBDA
  | OP_POWER
  | OP_PREDECESSOR
  | OP_SUCCESSOR
  | OP_NEGATE
  | OP_NOT
  | OP_MODULO
  | OP_DIVIDE
  | OP_MULTIPLY
  | OP_SUBTRACT
  | OP_ADDITION
  | OP_APPEND
  | OP_BITWISE_ZERO_FILL_RIGHT_SHIFT
  | OP_BITWISE_SIGNED_RIGHT_SHIFT
  | OP_BITWISE_ZERO_FILL_LEFT_SHIFT
  | OP_EQUALS
  | OP_EQUALS_OR_ASSIGN
  | OP_NOT_EQUALS
  | OP_GREATER_THAN_OR_EQUALS
  | OP_GREATER_THAN
  | OP_LESS_THAN_OR_EQUALS
  | OP_LESS_THAN
  | OP_BITWISE_NOT
  | OP_BITWISE_AND
  | OP_BITWISE_OR
  | OP_BITWISE_XOR
  | OP_AND
  | OP_OR
  | OP_XOR
  | OP_SPECIAL_ASSIGN
  | OP_BACKWARD_COMPOSITOR
  | OP_FORWARD_COMPOSITOR
  | OP_BACKWARD_PIPE
  | OP_FORWARD_PIPE
  | KW_STACKALLOC
  | KW_ALLOC
  | KW_PACKAGE
  | KW_MODULE
  | KW_SELF
  | KW_PROTOCOL
  | KW_KIND
  | KW_MATCH
  | KW_FUNC
  | KW_ELIF_NOT
  | KW_ELIF
  | KW_ELSE
  | KW_THEN
  | KW_IF_NOT
  | KW_IF
  | KW_LET
  | INDENTATION of (string * int)
  | WHITESPACES of (string * int)
  | MULTILINE_COMMENT of (string)
  | SINGLELINE_COMMENT of (string)
  | OPERATOR of (string)
  | IDENTIFIER of (string)
  | SYMBOL of (string)
  | NUMBER of (decimal)
  | STRING of (string)
  | OP_BACK_SLASH
  | OP_JOIN
  | OP_SHARP
  | OP_DOT
  | OP_PLUS_RARROW
  | OP_DOUBLE_RARROW
  | OP_DOUBLE_STAR
  | OP_STAR
  | OP_RARROW
  | OP_LARROW
  | NON_CURRIED
  | ANYTHING
  | BAR
  | COLON
  | POWER
  | SEPARATOR
  | COMMA
  | RBRACE
  | LBRACE
  | RBRACKET
  | LBRACKET
  | RPAREN
  | LPAREN
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LAMBDA
    | TOKEN_OP_POWER
    | TOKEN_OP_PREDECESSOR
    | TOKEN_OP_SUCCESSOR
    | TOKEN_OP_NEGATE
    | TOKEN_OP_NOT
    | TOKEN_OP_MODULO
    | TOKEN_OP_DIVIDE
    | TOKEN_OP_MULTIPLY
    | TOKEN_OP_SUBTRACT
    | TOKEN_OP_ADDITION
    | TOKEN_OP_APPEND
    | TOKEN_OP_BITWISE_ZERO_FILL_RIGHT_SHIFT
    | TOKEN_OP_BITWISE_SIGNED_RIGHT_SHIFT
    | TOKEN_OP_BITWISE_ZERO_FILL_LEFT_SHIFT
    | TOKEN_OP_EQUALS
    | TOKEN_OP_EQUALS_OR_ASSIGN
    | TOKEN_OP_NOT_EQUALS
    | TOKEN_OP_GREATER_THAN_OR_EQUALS
    | TOKEN_OP_GREATER_THAN
    | TOKEN_OP_LESS_THAN_OR_EQUALS
    | TOKEN_OP_LESS_THAN
    | TOKEN_OP_BITWISE_NOT
    | TOKEN_OP_BITWISE_AND
    | TOKEN_OP_BITWISE_OR
    | TOKEN_OP_BITWISE_XOR
    | TOKEN_OP_AND
    | TOKEN_OP_OR
    | TOKEN_OP_XOR
    | TOKEN_OP_SPECIAL_ASSIGN
    | TOKEN_OP_BACKWARD_COMPOSITOR
    | TOKEN_OP_FORWARD_COMPOSITOR
    | TOKEN_OP_BACKWARD_PIPE
    | TOKEN_OP_FORWARD_PIPE
    | TOKEN_KW_STACKALLOC
    | TOKEN_KW_ALLOC
    | TOKEN_KW_PACKAGE
    | TOKEN_KW_MODULE
    | TOKEN_KW_SELF
    | TOKEN_KW_PROTOCOL
    | TOKEN_KW_KIND
    | TOKEN_KW_MATCH
    | TOKEN_KW_FUNC
    | TOKEN_KW_ELIF_NOT
    | TOKEN_KW_ELIF
    | TOKEN_KW_ELSE
    | TOKEN_KW_THEN
    | TOKEN_KW_IF_NOT
    | TOKEN_KW_IF
    | TOKEN_KW_LET
    | TOKEN_INDENTATION
    | TOKEN_WHITESPACES
    | TOKEN_MULTILINE_COMMENT
    | TOKEN_SINGLELINE_COMMENT
    | TOKEN_OPERATOR
    | TOKEN_IDENTIFIER
    | TOKEN_SYMBOL
    | TOKEN_NUMBER
    | TOKEN_STRING
    | TOKEN_OP_BACK_SLASH
    | TOKEN_OP_JOIN
    | TOKEN_OP_SHARP
    | TOKEN_OP_DOT
    | TOKEN_OP_PLUS_RARROW
    | TOKEN_OP_DOUBLE_RARROW
    | TOKEN_OP_DOUBLE_STAR
    | TOKEN_OP_STAR
    | TOKEN_OP_RARROW
    | TOKEN_OP_LARROW
    | TOKEN_NON_CURRIED
    | TOKEN_ANYTHING
    | TOKEN_BAR
    | TOKEN_COLON
    | TOKEN_POWER
    | TOKEN_SEPARATOR
    | TOKEN_COMMA
    | TOKEN_RBRACE
    | TOKEN_LBRACE
    | TOKEN_RBRACKET
    | TOKEN_LBRACKET
    | TOKEN_RPAREN
    | TOKEN_LPAREN
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_prog
    | NONTERM_expr
    | NONTERM_stat
    | NONTERM_optSep
    | NONTERM_exprList
    | NONTERM_primitiveLiteral
    | NONTERM_literal
    | NONTERM_identifierOrPath
    | NONTERM_path
    | NONTERM_literalOrIdentifier
    | NONTERM_listLiteral
    | NONTERM_list
    | NONTERM_recordLiteral
    | NONTERM_record
    | NONTERM_key
    | NONTERM_moduleDef
    | NONTERM_sendMessages
    | NONTERM_receiver
    | NONTERM_messageList
    | NONTERM_message
    | NONTERM_binaryMessage
    | NONTERM_keywordMessage
    | NONTERM_keyword
    | NONTERM_matchingList
    | NONTERM_matching
    | NONTERM_case
    | NONTERM_optBar
    | NONTERM_func
    | NONTERM_funcKw
    | NONTERM_argNames
    | NONTERM_functionEval
    | NONTERM_args
    | NONTERM_arg
    | NONTERM_op
    | NONTERM_op0
    | NONTERM_logicalOp1
    | NONTERM_logicalOp2
    | NONTERM_logicalOp3
    | NONTERM_bitwiseOp1
    | NONTERM_bitwiseOp2
    | NONTERM_bitwiseOp3
    | NONTERM_bitwiseOp4
    | NONTERM_op4
    | NONTERM_bitwise_bit_shift
    | NONTERM_op5
    | NONTERM_op6
    | NONTERM_op7
    | NONTERM_opNegate
    | NONTERM_op8
    | NONTERM_op9
    | NONTERM_wrappedExpr
    | NONTERM_block
    | NONTERM_exprMain
    | NONTERM_opFunctional

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LAMBDA  -> 1 
  | OP_POWER  -> 2 
  | OP_PREDECESSOR  -> 3 
  | OP_SUCCESSOR  -> 4 
  | OP_NEGATE  -> 5 
  | OP_NOT  -> 6 
  | OP_MODULO  -> 7 
  | OP_DIVIDE  -> 8 
  | OP_MULTIPLY  -> 9 
  | OP_SUBTRACT  -> 10 
  | OP_ADDITION  -> 11 
  | OP_APPEND  -> 12 
  | OP_BITWISE_ZERO_FILL_RIGHT_SHIFT  -> 13 
  | OP_BITWISE_SIGNED_RIGHT_SHIFT  -> 14 
  | OP_BITWISE_ZERO_FILL_LEFT_SHIFT  -> 15 
  | OP_EQUALS  -> 16 
  | OP_EQUALS_OR_ASSIGN  -> 17 
  | OP_NOT_EQUALS  -> 18 
  | OP_GREATER_THAN_OR_EQUALS  -> 19 
  | OP_GREATER_THAN  -> 20 
  | OP_LESS_THAN_OR_EQUALS  -> 21 
  | OP_LESS_THAN  -> 22 
  | OP_BITWISE_NOT  -> 23 
  | OP_BITWISE_AND  -> 24 
  | OP_BITWISE_OR  -> 25 
  | OP_BITWISE_XOR  -> 26 
  | OP_AND  -> 27 
  | OP_OR  -> 28 
  | OP_XOR  -> 29 
  | OP_SPECIAL_ASSIGN  -> 30 
  | OP_BACKWARD_COMPOSITOR  -> 31 
  | OP_FORWARD_COMPOSITOR  -> 32 
  | OP_BACKWARD_PIPE  -> 33 
  | OP_FORWARD_PIPE  -> 34 
  | KW_STACKALLOC  -> 35 
  | KW_ALLOC  -> 36 
  | KW_PACKAGE  -> 37 
  | KW_MODULE  -> 38 
  | KW_SELF  -> 39 
  | KW_PROTOCOL  -> 40 
  | KW_KIND  -> 41 
  | KW_MATCH  -> 42 
  | KW_FUNC  -> 43 
  | KW_ELIF_NOT  -> 44 
  | KW_ELIF  -> 45 
  | KW_ELSE  -> 46 
  | KW_THEN  -> 47 
  | KW_IF_NOT  -> 48 
  | KW_IF  -> 49 
  | KW_LET  -> 50 
  | INDENTATION _ -> 51 
  | WHITESPACES _ -> 52 
  | MULTILINE_COMMENT _ -> 53 
  | SINGLELINE_COMMENT _ -> 54 
  | OPERATOR _ -> 55 
  | IDENTIFIER _ -> 56 
  | SYMBOL _ -> 57 
  | NUMBER _ -> 58 
  | STRING _ -> 59 
  | OP_BACK_SLASH  -> 60 
  | OP_JOIN  -> 61 
  | OP_SHARP  -> 62 
  | OP_DOT  -> 63 
  | OP_PLUS_RARROW  -> 64 
  | OP_DOUBLE_RARROW  -> 65 
  | OP_DOUBLE_STAR  -> 66 
  | OP_STAR  -> 67 
  | OP_RARROW  -> 68 
  | OP_LARROW  -> 69 
  | NON_CURRIED  -> 70 
  | ANYTHING  -> 71 
  | BAR  -> 72 
  | COLON  -> 73 
  | POWER  -> 74 
  | SEPARATOR  -> 75 
  | COMMA  -> 76 
  | RBRACE  -> 77 
  | LBRACE  -> 78 
  | RBRACKET  -> 79 
  | LBRACKET  -> 80 
  | RPAREN  -> 81 
  | LPAREN  -> 82 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LAMBDA 
  | 2 -> TOKEN_OP_POWER 
  | 3 -> TOKEN_OP_PREDECESSOR 
  | 4 -> TOKEN_OP_SUCCESSOR 
  | 5 -> TOKEN_OP_NEGATE 
  | 6 -> TOKEN_OP_NOT 
  | 7 -> TOKEN_OP_MODULO 
  | 8 -> TOKEN_OP_DIVIDE 
  | 9 -> TOKEN_OP_MULTIPLY 
  | 10 -> TOKEN_OP_SUBTRACT 
  | 11 -> TOKEN_OP_ADDITION 
  | 12 -> TOKEN_OP_APPEND 
  | 13 -> TOKEN_OP_BITWISE_ZERO_FILL_RIGHT_SHIFT 
  | 14 -> TOKEN_OP_BITWISE_SIGNED_RIGHT_SHIFT 
  | 15 -> TOKEN_OP_BITWISE_ZERO_FILL_LEFT_SHIFT 
  | 16 -> TOKEN_OP_EQUALS 
  | 17 -> TOKEN_OP_EQUALS_OR_ASSIGN 
  | 18 -> TOKEN_OP_NOT_EQUALS 
  | 19 -> TOKEN_OP_GREATER_THAN_OR_EQUALS 
  | 20 -> TOKEN_OP_GREATER_THAN 
  | 21 -> TOKEN_OP_LESS_THAN_OR_EQUALS 
  | 22 -> TOKEN_OP_LESS_THAN 
  | 23 -> TOKEN_OP_BITWISE_NOT 
  | 24 -> TOKEN_OP_BITWISE_AND 
  | 25 -> TOKEN_OP_BITWISE_OR 
  | 26 -> TOKEN_OP_BITWISE_XOR 
  | 27 -> TOKEN_OP_AND 
  | 28 -> TOKEN_OP_OR 
  | 29 -> TOKEN_OP_XOR 
  | 30 -> TOKEN_OP_SPECIAL_ASSIGN 
  | 31 -> TOKEN_OP_BACKWARD_COMPOSITOR 
  | 32 -> TOKEN_OP_FORWARD_COMPOSITOR 
  | 33 -> TOKEN_OP_BACKWARD_PIPE 
  | 34 -> TOKEN_OP_FORWARD_PIPE 
  | 35 -> TOKEN_KW_STACKALLOC 
  | 36 -> TOKEN_KW_ALLOC 
  | 37 -> TOKEN_KW_PACKAGE 
  | 38 -> TOKEN_KW_MODULE 
  | 39 -> TOKEN_KW_SELF 
  | 40 -> TOKEN_KW_PROTOCOL 
  | 41 -> TOKEN_KW_KIND 
  | 42 -> TOKEN_KW_MATCH 
  | 43 -> TOKEN_KW_FUNC 
  | 44 -> TOKEN_KW_ELIF_NOT 
  | 45 -> TOKEN_KW_ELIF 
  | 46 -> TOKEN_KW_ELSE 
  | 47 -> TOKEN_KW_THEN 
  | 48 -> TOKEN_KW_IF_NOT 
  | 49 -> TOKEN_KW_IF 
  | 50 -> TOKEN_KW_LET 
  | 51 -> TOKEN_INDENTATION 
  | 52 -> TOKEN_WHITESPACES 
  | 53 -> TOKEN_MULTILINE_COMMENT 
  | 54 -> TOKEN_SINGLELINE_COMMENT 
  | 55 -> TOKEN_OPERATOR 
  | 56 -> TOKEN_IDENTIFIER 
  | 57 -> TOKEN_SYMBOL 
  | 58 -> TOKEN_NUMBER 
  | 59 -> TOKEN_STRING 
  | 60 -> TOKEN_OP_BACK_SLASH 
  | 61 -> TOKEN_OP_JOIN 
  | 62 -> TOKEN_OP_SHARP 
  | 63 -> TOKEN_OP_DOT 
  | 64 -> TOKEN_OP_PLUS_RARROW 
  | 65 -> TOKEN_OP_DOUBLE_RARROW 
  | 66 -> TOKEN_OP_DOUBLE_STAR 
  | 67 -> TOKEN_OP_STAR 
  | 68 -> TOKEN_OP_RARROW 
  | 69 -> TOKEN_OP_LARROW 
  | 70 -> TOKEN_NON_CURRIED 
  | 71 -> TOKEN_ANYTHING 
  | 72 -> TOKEN_BAR 
  | 73 -> TOKEN_COLON 
  | 74 -> TOKEN_POWER 
  | 75 -> TOKEN_SEPARATOR 
  | 76 -> TOKEN_COMMA 
  | 77 -> TOKEN_RBRACE 
  | 78 -> TOKEN_LBRACE 
  | 79 -> TOKEN_RBRACKET 
  | 80 -> TOKEN_LBRACKET 
  | 81 -> TOKEN_RPAREN 
  | 82 -> TOKEN_LPAREN 
  | 85 -> TOKEN_end_of_input
  | 83 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_prog 
    | 3 -> NONTERM_prog 
    | 4 -> NONTERM_expr 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_stat 
    | 7 -> NONTERM_stat 
    | 8 -> NONTERM_optSep 
    | 9 -> NONTERM_optSep 
    | 10 -> NONTERM_exprList 
    | 11 -> NONTERM_exprList 
    | 12 -> NONTERM_exprList 
    | 13 -> NONTERM_exprList 
    | 14 -> NONTERM_exprList 
    | 15 -> NONTERM_primitiveLiteral 
    | 16 -> NONTERM_primitiveLiteral 
    | 17 -> NONTERM_primitiveLiteral 
    | 18 -> NONTERM_primitiveLiteral 
    | 19 -> NONTERM_literal 
    | 20 -> NONTERM_literal 
    | 21 -> NONTERM_literal 
    | 22 -> NONTERM_identifierOrPath 
    | 23 -> NONTERM_identifierOrPath 
    | 24 -> NONTERM_path 
    | 25 -> NONTERM_path 
    | 26 -> NONTERM_literalOrIdentifier 
    | 27 -> NONTERM_literalOrIdentifier 
    | 28 -> NONTERM_listLiteral 
    | 29 -> NONTERM_list 
    | 30 -> NONTERM_list 
    | 31 -> NONTERM_list 
    | 32 -> NONTERM_recordLiteral 
    | 33 -> NONTERM_record 
    | 34 -> NONTERM_record 
    | 35 -> NONTERM_record 
    | 36 -> NONTERM_record 
    | 37 -> NONTERM_record 
    | 38 -> NONTERM_key 
    | 39 -> NONTERM_key 
    | 40 -> NONTERM_key 
    | 41 -> NONTERM_moduleDef 
    | 42 -> NONTERM_moduleDef 
    | 43 -> NONTERM_moduleDef 
    | 44 -> NONTERM_sendMessages 
    | 45 -> NONTERM_receiver 
    | 46 -> NONTERM_receiver 
    | 47 -> NONTERM_messageList 
    | 48 -> NONTERM_messageList 
    | 49 -> NONTERM_messageList 
    | 50 -> NONTERM_message 
    | 51 -> NONTERM_message 
    | 52 -> NONTERM_binaryMessage 
    | 53 -> NONTERM_binaryMessage 
    | 54 -> NONTERM_binaryMessage 
    | 55 -> NONTERM_keywordMessage 
    | 56 -> NONTERM_keywordMessage 
    | 57 -> NONTERM_keyword 
    | 58 -> NONTERM_keyword 
    | 59 -> NONTERM_keyword 
    | 60 -> NONTERM_keyword 
    | 61 -> NONTERM_matchingList 
    | 62 -> NONTERM_matchingList 
    | 63 -> NONTERM_matching 
    | 64 -> NONTERM_matching 
    | 65 -> NONTERM_case 
    | 66 -> NONTERM_case 
    | 67 -> NONTERM_case 
    | 68 -> NONTERM_optBar 
    | 69 -> NONTERM_optBar 
    | 70 -> NONTERM_func 
    | 71 -> NONTERM_func 
    | 72 -> NONTERM_funcKw 
    | 73 -> NONTERM_funcKw 
    | 74 -> NONTERM_argNames 
    | 75 -> NONTERM_argNames 
    | 76 -> NONTERM_argNames 
    | 77 -> NONTERM_functionEval 
    | 78 -> NONTERM_functionEval 
    | 79 -> NONTERM_args 
    | 80 -> NONTERM_args 
    | 81 -> NONTERM_arg 
    | 82 -> NONTERM_arg 
    | 83 -> NONTERM_arg 
    | 84 -> NONTERM_op 
    | 85 -> NONTERM_op0 
    | 86 -> NONTERM_op0 
    | 87 -> NONTERM_logicalOp1 
    | 88 -> NONTERM_logicalOp1 
    | 89 -> NONTERM_logicalOp2 
    | 90 -> NONTERM_logicalOp2 
    | 91 -> NONTERM_logicalOp3 
    | 92 -> NONTERM_logicalOp3 
    | 93 -> NONTERM_bitwiseOp1 
    | 94 -> NONTERM_bitwiseOp1 
    | 95 -> NONTERM_bitwiseOp2 
    | 96 -> NONTERM_bitwiseOp2 
    | 97 -> NONTERM_bitwiseOp3 
    | 98 -> NONTERM_bitwiseOp3 
    | 99 -> NONTERM_bitwiseOp4 
    | 100 -> NONTERM_bitwiseOp4 
    | 101 -> NONTERM_op4 
    | 102 -> NONTERM_op4 
    | 103 -> NONTERM_op4 
    | 104 -> NONTERM_op4 
    | 105 -> NONTERM_op4 
    | 106 -> NONTERM_op4 
    | 107 -> NONTERM_op4 
    | 108 -> NONTERM_op4 
    | 109 -> NONTERM_bitwise_bit_shift 
    | 110 -> NONTERM_bitwise_bit_shift 
    | 111 -> NONTERM_bitwise_bit_shift 
    | 112 -> NONTERM_bitwise_bit_shift 
    | 113 -> NONTERM_op5 
    | 114 -> NONTERM_op5 
    | 115 -> NONTERM_op6 
    | 116 -> NONTERM_op6 
    | 117 -> NONTERM_op6 
    | 118 -> NONTERM_op7 
    | 119 -> NONTERM_op7 
    | 120 -> NONTERM_op7 
    | 121 -> NONTERM_op7 
    | 122 -> NONTERM_opNegate 
    | 123 -> NONTERM_op8 
    | 124 -> NONTERM_op8 
    | 125 -> NONTERM_op8 
    | 126 -> NONTERM_op8 
    | 127 -> NONTERM_op8 
    | 128 -> NONTERM_op9 
    | 129 -> NONTERM_op9 
    | 130 -> NONTERM_wrappedExpr 
    | 131 -> NONTERM_wrappedExpr 
    | 132 -> NONTERM_block 
    | 133 -> NONTERM_block 
    | 134 -> NONTERM_exprMain 
    | 135 -> NONTERM_exprMain 
    | 136 -> NONTERM_exprMain 
    | 137 -> NONTERM_exprMain 
    | 138 -> NONTERM_exprMain 
    | 139 -> NONTERM_exprMain 
    | 140 -> NONTERM_exprMain 
    | 141 -> NONTERM_exprMain 
    | 142 -> NONTERM_exprMain 
    | 143 -> NONTERM_exprMain 
    | 144 -> NONTERM_exprMain 
    | 145 -> NONTERM_opFunctional 
    | 146 -> NONTERM_opFunctional 
    | 147 -> NONTERM_opFunctional 
    | 148 -> NONTERM_opFunctional 
    | 149 -> NONTERM_opFunctional 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 85 
let _fsyacc_tagOfErrorTerminal = 83

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LAMBDA  -> "LAMBDA" 
  | OP_POWER  -> "OP_POWER" 
  | OP_PREDECESSOR  -> "OP_PREDECESSOR" 
  | OP_SUCCESSOR  -> "OP_SUCCESSOR" 
  | OP_NEGATE  -> "OP_NEGATE" 
  | OP_NOT  -> "OP_NOT" 
  | OP_MODULO  -> "OP_MODULO" 
  | OP_DIVIDE  -> "OP_DIVIDE" 
  | OP_MULTIPLY  -> "OP_MULTIPLY" 
  | OP_SUBTRACT  -> "OP_SUBTRACT" 
  | OP_ADDITION  -> "OP_ADDITION" 
  | OP_APPEND  -> "OP_APPEND" 
  | OP_BITWISE_ZERO_FILL_RIGHT_SHIFT  -> "OP_BITWISE_ZERO_FILL_RIGHT_SHIFT" 
  | OP_BITWISE_SIGNED_RIGHT_SHIFT  -> "OP_BITWISE_SIGNED_RIGHT_SHIFT" 
  | OP_BITWISE_ZERO_FILL_LEFT_SHIFT  -> "OP_BITWISE_ZERO_FILL_LEFT_SHIFT" 
  | OP_EQUALS  -> "OP_EQUALS" 
  | OP_EQUALS_OR_ASSIGN  -> "OP_EQUALS_OR_ASSIGN" 
  | OP_NOT_EQUALS  -> "OP_NOT_EQUALS" 
  | OP_GREATER_THAN_OR_EQUALS  -> "OP_GREATER_THAN_OR_EQUALS" 
  | OP_GREATER_THAN  -> "OP_GREATER_THAN" 
  | OP_LESS_THAN_OR_EQUALS  -> "OP_LESS_THAN_OR_EQUALS" 
  | OP_LESS_THAN  -> "OP_LESS_THAN" 
  | OP_BITWISE_NOT  -> "OP_BITWISE_NOT" 
  | OP_BITWISE_AND  -> "OP_BITWISE_AND" 
  | OP_BITWISE_OR  -> "OP_BITWISE_OR" 
  | OP_BITWISE_XOR  -> "OP_BITWISE_XOR" 
  | OP_AND  -> "OP_AND" 
  | OP_OR  -> "OP_OR" 
  | OP_XOR  -> "OP_XOR" 
  | OP_SPECIAL_ASSIGN  -> "OP_SPECIAL_ASSIGN" 
  | OP_BACKWARD_COMPOSITOR  -> "OP_BACKWARD_COMPOSITOR" 
  | OP_FORWARD_COMPOSITOR  -> "OP_FORWARD_COMPOSITOR" 
  | OP_BACKWARD_PIPE  -> "OP_BACKWARD_PIPE" 
  | OP_FORWARD_PIPE  -> "OP_FORWARD_PIPE" 
  | KW_STACKALLOC  -> "KW_STACKALLOC" 
  | KW_ALLOC  -> "KW_ALLOC" 
  | KW_PACKAGE  -> "KW_PACKAGE" 
  | KW_MODULE  -> "KW_MODULE" 
  | KW_SELF  -> "KW_SELF" 
  | KW_PROTOCOL  -> "KW_PROTOCOL" 
  | KW_KIND  -> "KW_KIND" 
  | KW_MATCH  -> "KW_MATCH" 
  | KW_FUNC  -> "KW_FUNC" 
  | KW_ELIF_NOT  -> "KW_ELIF_NOT" 
  | KW_ELIF  -> "KW_ELIF" 
  | KW_ELSE  -> "KW_ELSE" 
  | KW_THEN  -> "KW_THEN" 
  | KW_IF_NOT  -> "KW_IF_NOT" 
  | KW_IF  -> "KW_IF" 
  | KW_LET  -> "KW_LET" 
  | INDENTATION _ -> "INDENTATION" 
  | WHITESPACES _ -> "WHITESPACES" 
  | MULTILINE_COMMENT _ -> "MULTILINE_COMMENT" 
  | SINGLELINE_COMMENT _ -> "SINGLELINE_COMMENT" 
  | OPERATOR _ -> "OPERATOR" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | SYMBOL _ -> "SYMBOL" 
  | NUMBER _ -> "NUMBER" 
  | STRING _ -> "STRING" 
  | OP_BACK_SLASH  -> "OP_BACK_SLASH" 
  | OP_JOIN  -> "OP_JOIN" 
  | OP_SHARP  -> "OP_SHARP" 
  | OP_DOT  -> "OP_DOT" 
  | OP_PLUS_RARROW  -> "OP_PLUS_RARROW" 
  | OP_DOUBLE_RARROW  -> "OP_DOUBLE_RARROW" 
  | OP_DOUBLE_STAR  -> "OP_DOUBLE_STAR" 
  | OP_STAR  -> "OP_STAR" 
  | OP_RARROW  -> "OP_RARROW" 
  | OP_LARROW  -> "OP_LARROW" 
  | NON_CURRIED  -> "NON_CURRIED" 
  | ANYTHING  -> "ANYTHING" 
  | BAR  -> "BAR" 
  | COLON  -> "COLON" 
  | POWER  -> "POWER" 
  | SEPARATOR  -> "SEPARATOR" 
  | COMMA  -> "COMMA" 
  | RBRACE  -> "RBRACE" 
  | LBRACE  -> "LBRACE" 
  | RBRACKET  -> "RBRACKET" 
  | LBRACKET  -> "LBRACKET" 
  | RPAREN  -> "RPAREN" 
  | LPAREN  -> "LPAREN" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LAMBDA  -> (null : System.Object) 
  | OP_POWER  -> (null : System.Object) 
  | OP_PREDECESSOR  -> (null : System.Object) 
  | OP_SUCCESSOR  -> (null : System.Object) 
  | OP_NEGATE  -> (null : System.Object) 
  | OP_NOT  -> (null : System.Object) 
  | OP_MODULO  -> (null : System.Object) 
  | OP_DIVIDE  -> (null : System.Object) 
  | OP_MULTIPLY  -> (null : System.Object) 
  | OP_SUBTRACT  -> (null : System.Object) 
  | OP_ADDITION  -> (null : System.Object) 
  | OP_APPEND  -> (null : System.Object) 
  | OP_BITWISE_ZERO_FILL_RIGHT_SHIFT  -> (null : System.Object) 
  | OP_BITWISE_SIGNED_RIGHT_SHIFT  -> (null : System.Object) 
  | OP_BITWISE_ZERO_FILL_LEFT_SHIFT  -> (null : System.Object) 
  | OP_EQUALS  -> (null : System.Object) 
  | OP_EQUALS_OR_ASSIGN  -> (null : System.Object) 
  | OP_NOT_EQUALS  -> (null : System.Object) 
  | OP_GREATER_THAN_OR_EQUALS  -> (null : System.Object) 
  | OP_GREATER_THAN  -> (null : System.Object) 
  | OP_LESS_THAN_OR_EQUALS  -> (null : System.Object) 
  | OP_LESS_THAN  -> (null : System.Object) 
  | OP_BITWISE_NOT  -> (null : System.Object) 
  | OP_BITWISE_AND  -> (null : System.Object) 
  | OP_BITWISE_OR  -> (null : System.Object) 
  | OP_BITWISE_XOR  -> (null : System.Object) 
  | OP_AND  -> (null : System.Object) 
  | OP_OR  -> (null : System.Object) 
  | OP_XOR  -> (null : System.Object) 
  | OP_SPECIAL_ASSIGN  -> (null : System.Object) 
  | OP_BACKWARD_COMPOSITOR  -> (null : System.Object) 
  | OP_FORWARD_COMPOSITOR  -> (null : System.Object) 
  | OP_BACKWARD_PIPE  -> (null : System.Object) 
  | OP_FORWARD_PIPE  -> (null : System.Object) 
  | KW_STACKALLOC  -> (null : System.Object) 
  | KW_ALLOC  -> (null : System.Object) 
  | KW_PACKAGE  -> (null : System.Object) 
  | KW_MODULE  -> (null : System.Object) 
  | KW_SELF  -> (null : System.Object) 
  | KW_PROTOCOL  -> (null : System.Object) 
  | KW_KIND  -> (null : System.Object) 
  | KW_MATCH  -> (null : System.Object) 
  | KW_FUNC  -> (null : System.Object) 
  | KW_ELIF_NOT  -> (null : System.Object) 
  | KW_ELIF  -> (null : System.Object) 
  | KW_ELSE  -> (null : System.Object) 
  | KW_THEN  -> (null : System.Object) 
  | KW_IF_NOT  -> (null : System.Object) 
  | KW_IF  -> (null : System.Object) 
  | KW_LET  -> (null : System.Object) 
  | INDENTATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MULTILINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SINGLELINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SYMBOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NUMBER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OP_BACK_SLASH  -> (null : System.Object) 
  | OP_JOIN  -> (null : System.Object) 
  | OP_SHARP  -> (null : System.Object) 
  | OP_DOT  -> (null : System.Object) 
  | OP_PLUS_RARROW  -> (null : System.Object) 
  | OP_DOUBLE_RARROW  -> (null : System.Object) 
  | OP_DOUBLE_STAR  -> (null : System.Object) 
  | OP_STAR  -> (null : System.Object) 
  | OP_RARROW  -> (null : System.Object) 
  | OP_LARROW  -> (null : System.Object) 
  | NON_CURRIED  -> (null : System.Object) 
  | ANYTHING  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | POWER  -> (null : System.Object) 
  | SEPARATOR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 60us; 65535us; 4us; 29us; 7us; 29us; 11us; 12us; 19us; 20us; 23us; 29us; 25us; 29us; 30us; 29us; 55us; 56us; 71us; 72us; 84us; 85us; 100us; 101us; 114us; 115us; 121us; 122us; 125us; 131us; 128us; 129us; 135us; 136us; 140us; 141us; 155us; 278us; 158us; 278us; 161us; 278us; 164us; 278us; 167us; 278us; 170us; 278us; 173us; 278us; 176us; 278us; 179us; 278us; 181us; 278us; 183us; 278us; 185us; 278us; 187us; 278us; 189us; 278us; 191us; 278us; 194us; 278us; 196us; 278us; 198us; 278us; 201us; 278us; 204us; 278us; 206us; 278us; 209us; 278us; 211us; 278us; 213us; 278us; 216us; 278us; 218us; 278us; 221us; 278us; 223us; 278us; 226us; 278us; 229us; 27us; 236us; 28us; 247us; 248us; 250us; 251us; 253us; 254us; 255us; 256us; 258us; 259us; 261us; 262us; 263us; 264us; 267us; 131us; 270us; 271us; 272us; 273us; 274us; 275us; 276us; 277us; 8us; 65535us; 4us; 24us; 7us; 24us; 11us; 24us; 23us; 24us; 25us; 24us; 30us; 24us; 229us; 24us; 236us; 24us; 36us; 65535us; 0us; 4us; 6us; 7us; 10us; 11us; 12us; 13us; 27us; 230us; 28us; 237us; 35us; 100us; 36us; 229us; 50us; 51us; 51us; 55us; 52us; 53us; 56us; 57us; 58us; 59us; 59us; 55us; 60us; 61us; 62us; 63us; 63us; 67us; 64us; 65us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 67us; 77us; 78us; 79us; 80us; 80us; 67us; 94us; 95us; 101us; 102us; 232us; 233us; 235us; 236us; 239us; 240us; 248us; 249us; 251us; 252us; 256us; 257us; 259us; 260us; 265us; 266us; 8us; 65535us; 4us; 9us; 7us; 8us; 11us; 232us; 23us; 31us; 25us; 26us; 30us; 31us; 229us; 232us; 236us; 239us; 65us; 65535us; 4us; 38us; 7us; 38us; 11us; 38us; 14us; 38us; 19us; 38us; 23us; 38us; 25us; 38us; 30us; 38us; 49us; 38us; 55us; 38us; 71us; 38us; 84us; 38us; 98us; 38us; 100us; 38us; 114us; 38us; 121us; 38us; 125us; 38us; 128us; 38us; 135us; 38us; 140us; 38us; 147us; 38us; 149us; 38us; 155us; 38us; 158us; 38us; 161us; 38us; 164us; 38us; 167us; 38us; 170us; 38us; 173us; 38us; 176us; 38us; 179us; 38us; 181us; 38us; 183us; 38us; 185us; 38us; 187us; 38us; 189us; 38us; 191us; 38us; 194us; 38us; 196us; 38us; 198us; 38us; 201us; 38us; 204us; 38us; 206us; 38us; 209us; 38us; 211us; 38us; 213us; 38us; 216us; 38us; 218us; 38us; 221us; 38us; 223us; 38us; 226us; 38us; 229us; 38us; 236us; 38us; 247us; 38us; 250us; 38us; 253us; 38us; 255us; 38us; 258us; 38us; 261us; 38us; 263us; 38us; 267us; 38us; 270us; 38us; 272us; 38us; 274us; 38us; 276us; 38us; 65us; 65535us; 4us; 47us; 7us; 47us; 11us; 47us; 14us; 47us; 19us; 47us; 23us; 47us; 25us; 47us; 30us; 47us; 49us; 47us; 55us; 47us; 71us; 47us; 84us; 47us; 98us; 47us; 100us; 47us; 114us; 47us; 121us; 47us; 125us; 47us; 128us; 47us; 135us; 47us; 140us; 47us; 147us; 47us; 149us; 47us; 155us; 47us; 158us; 47us; 161us; 47us; 164us; 47us; 167us; 47us; 170us; 47us; 173us; 47us; 176us; 47us; 179us; 47us; 181us; 47us; 183us; 47us; 185us; 47us; 187us; 47us; 189us; 47us; 191us; 47us; 194us; 47us; 196us; 47us; 198us; 47us; 201us; 47us; 204us; 47us; 206us; 47us; 209us; 47us; 211us; 47us; 213us; 47us; 216us; 47us; 218us; 47us; 221us; 47us; 223us; 47us; 226us; 47us; 229us; 47us; 236us; 47us; 247us; 47us; 250us; 47us; 253us; 47us; 255us; 47us; 258us; 47us; 261us; 47us; 263us; 47us; 267us; 47us; 270us; 47us; 272us; 47us; 274us; 47us; 276us; 47us; 66us; 65535us; 4us; 49us; 7us; 49us; 11us; 49us; 14us; 48us; 19us; 49us; 23us; 49us; 25us; 49us; 30us; 49us; 49us; 48us; 55us; 49us; 71us; 49us; 84us; 49us; 98us; 48us; 100us; 49us; 114us; 49us; 121us; 49us; 125us; 49us; 128us; 49us; 135us; 49us; 137us; 147us; 140us; 49us; 147us; 48us; 149us; 48us; 155us; 49us; 158us; 49us; 161us; 49us; 164us; 49us; 167us; 49us; 170us; 49us; 173us; 49us; 176us; 49us; 179us; 49us; 181us; 49us; 183us; 49us; 185us; 49us; 187us; 49us; 189us; 49us; 191us; 49us; 194us; 49us; 196us; 49us; 198us; 49us; 201us; 49us; 204us; 49us; 206us; 49us; 209us; 49us; 211us; 49us; 213us; 49us; 216us; 49us; 218us; 49us; 221us; 49us; 223us; 49us; 226us; 49us; 229us; 49us; 236us; 49us; 247us; 49us; 250us; 49us; 253us; 49us; 255us; 49us; 258us; 49us; 261us; 49us; 263us; 49us; 267us; 49us; 270us; 49us; 272us; 49us; 274us; 49us; 276us; 49us; 67us; 65535us; 4us; 43us; 7us; 43us; 11us; 43us; 14us; 43us; 19us; 43us; 23us; 43us; 25us; 43us; 30us; 43us; 45us; 46us; 49us; 43us; 55us; 43us; 71us; 43us; 84us; 43us; 98us; 43us; 100us; 43us; 114us; 43us; 121us; 43us; 125us; 43us; 128us; 43us; 135us; 43us; 137us; 43us; 140us; 43us; 147us; 43us; 149us; 43us; 155us; 43us; 158us; 43us; 161us; 43us; 164us; 43us; 167us; 43us; 170us; 43us; 173us; 43us; 176us; 43us; 179us; 43us; 181us; 43us; 183us; 43us; 185us; 43us; 187us; 43us; 189us; 43us; 191us; 43us; 194us; 43us; 196us; 43us; 198us; 43us; 201us; 43us; 204us; 43us; 206us; 43us; 209us; 43us; 211us; 43us; 213us; 43us; 216us; 43us; 218us; 43us; 221us; 43us; 223us; 43us; 226us; 43us; 229us; 43us; 236us; 43us; 247us; 43us; 250us; 43us; 253us; 43us; 255us; 43us; 258us; 43us; 261us; 43us; 263us; 43us; 267us; 43us; 270us; 43us; 272us; 43us; 274us; 43us; 276us; 43us; 65us; 65535us; 4us; 242us; 7us; 242us; 11us; 242us; 14us; 152us; 19us; 242us; 23us; 242us; 25us; 242us; 30us; 242us; 49us; 152us; 55us; 242us; 71us; 242us; 84us; 242us; 98us; 99us; 100us; 242us; 114us; 242us; 121us; 242us; 125us; 242us; 128us; 242us; 135us; 242us; 140us; 242us; 147us; 152us; 149us; 152us; 155us; 242us; 158us; 242us; 161us; 242us; 164us; 242us; 167us; 242us; 170us; 242us; 173us; 242us; 176us; 242us; 179us; 242us; 181us; 242us; 183us; 242us; 185us; 242us; 187us; 242us; 189us; 242us; 191us; 242us; 194us; 242us; 196us; 242us; 198us; 242us; 201us; 242us; 204us; 242us; 206us; 242us; 209us; 242us; 211us; 242us; 213us; 242us; 216us; 242us; 218us; 242us; 221us; 242us; 223us; 242us; 226us; 242us; 229us; 242us; 236us; 242us; 247us; 242us; 250us; 242us; 253us; 242us; 255us; 242us; 258us; 242us; 261us; 242us; 263us; 242us; 267us; 242us; 270us; 242us; 272us; 242us; 274us; 242us; 276us; 242us; 65us; 65535us; 4us; 39us; 7us; 39us; 11us; 39us; 14us; 39us; 19us; 39us; 23us; 39us; 25us; 39us; 30us; 39us; 49us; 39us; 55us; 39us; 71us; 39us; 84us; 39us; 98us; 39us; 100us; 39us; 114us; 39us; 121us; 39us; 125us; 39us; 128us; 39us; 135us; 39us; 140us; 39us; 147us; 39us; 149us; 39us; 155us; 39us; 158us; 39us; 161us; 39us; 164us; 39us; 167us; 39us; 170us; 39us; 173us; 39us; 176us; 39us; 179us; 39us; 181us; 39us; 183us; 39us; 185us; 39us; 187us; 39us; 189us; 39us; 191us; 39us; 194us; 39us; 196us; 39us; 198us; 39us; 201us; 39us; 204us; 39us; 206us; 39us; 209us; 39us; 211us; 39us; 213us; 39us; 216us; 39us; 218us; 39us; 221us; 39us; 223us; 39us; 226us; 39us; 229us; 39us; 236us; 39us; 247us; 39us; 250us; 39us; 253us; 39us; 255us; 39us; 258us; 39us; 261us; 39us; 263us; 39us; 267us; 39us; 270us; 39us; 272us; 39us; 274us; 39us; 276us; 39us; 2us; 65535us; 51us; 52us; 59us; 60us; 65us; 65535us; 4us; 40us; 7us; 40us; 11us; 40us; 14us; 40us; 19us; 40us; 23us; 40us; 25us; 40us; 30us; 40us; 49us; 40us; 55us; 40us; 71us; 40us; 84us; 40us; 98us; 40us; 100us; 40us; 114us; 40us; 121us; 40us; 125us; 40us; 128us; 40us; 135us; 40us; 140us; 40us; 147us; 40us; 149us; 40us; 155us; 40us; 158us; 40us; 161us; 40us; 164us; 40us; 167us; 40us; 170us; 40us; 173us; 40us; 176us; 40us; 179us; 40us; 181us; 40us; 183us; 40us; 185us; 40us; 187us; 40us; 189us; 40us; 191us; 40us; 194us; 40us; 196us; 40us; 198us; 40us; 201us; 40us; 204us; 40us; 206us; 40us; 209us; 40us; 211us; 40us; 213us; 40us; 216us; 40us; 218us; 40us; 221us; 40us; 223us; 40us; 226us; 40us; 229us; 40us; 236us; 40us; 247us; 40us; 250us; 40us; 253us; 40us; 255us; 40us; 258us; 40us; 261us; 40us; 263us; 40us; 267us; 40us; 270us; 40us; 272us; 40us; 274us; 40us; 276us; 40us; 3us; 65535us; 63us; 64us; 75us; 76us; 80us; 81us; 8us; 65535us; 5us; 6us; 67us; 68us; 87us; 88us; 91us; 92us; 96us; 113us; 106us; 113us; 109us; 113us; 118us; 120us; 8us; 65535us; 4us; 21us; 7us; 21us; 11us; 21us; 23us; 21us; 25us; 21us; 30us; 21us; 229us; 21us; 236us; 21us; 60us; 65535us; 4us; 245us; 7us; 245us; 11us; 245us; 19us; 245us; 23us; 245us; 25us; 245us; 30us; 245us; 55us; 245us; 71us; 245us; 84us; 245us; 100us; 245us; 114us; 245us; 121us; 245us; 125us; 245us; 128us; 245us; 135us; 245us; 140us; 245us; 155us; 245us; 158us; 245us; 161us; 245us; 164us; 245us; 167us; 245us; 170us; 245us; 173us; 245us; 176us; 245us; 179us; 245us; 181us; 245us; 183us; 245us; 185us; 245us; 187us; 245us; 189us; 245us; 191us; 245us; 194us; 245us; 196us; 245us; 198us; 245us; 201us; 245us; 204us; 245us; 206us; 245us; 209us; 245us; 211us; 245us; 213us; 245us; 216us; 245us; 218us; 245us; 221us; 245us; 223us; 245us; 226us; 245us; 229us; 245us; 236us; 245us; 247us; 245us; 250us; 245us; 253us; 245us; 255us; 245us; 258us; 245us; 261us; 245us; 263us; 245us; 267us; 245us; 270us; 245us; 272us; 245us; 274us; 245us; 276us; 245us; 60us; 65535us; 4us; 94us; 7us; 94us; 11us; 94us; 19us; 94us; 23us; 94us; 25us; 94us; 30us; 94us; 55us; 94us; 71us; 94us; 84us; 94us; 100us; 94us; 114us; 94us; 121us; 94us; 125us; 94us; 128us; 94us; 135us; 94us; 140us; 94us; 155us; 94us; 158us; 94us; 161us; 94us; 164us; 94us; 167us; 94us; 170us; 94us; 173us; 94us; 176us; 94us; 179us; 94us; 181us; 94us; 183us; 94us; 185us; 94us; 187us; 94us; 189us; 94us; 191us; 94us; 194us; 94us; 196us; 94us; 198us; 94us; 201us; 94us; 204us; 94us; 206us; 94us; 209us; 94us; 211us; 94us; 213us; 94us; 216us; 94us; 218us; 94us; 221us; 94us; 223us; 94us; 226us; 94us; 229us; 94us; 236us; 94us; 247us; 94us; 250us; 94us; 253us; 94us; 255us; 94us; 258us; 94us; 261us; 94us; 263us; 94us; 267us; 94us; 270us; 94us; 272us; 94us; 274us; 94us; 276us; 94us; 3us; 65535us; 96us; 97us; 106us; 107us; 109us; 110us; 3us; 65535us; 96us; 104us; 106us; 104us; 109us; 104us; 3us; 65535us; 96us; 111us; 106us; 111us; 109us; 111us; 4us; 65535us; 96us; 112us; 106us; 112us; 109us; 112us; 118us; 119us; 4us; 65535us; 96us; 117us; 106us; 117us; 109us; 117us; 118us; 117us; 2us; 65535us; 125us; 126us; 267us; 268us; 2us; 65535us; 125us; 124us; 267us; 124us; 2us; 65535us; 125us; 127us; 267us; 127us; 5us; 65535us; 95us; 96us; 105us; 106us; 108us; 109us; 117us; 118us; 266us; 267us; 60us; 65535us; 4us; 246us; 7us; 246us; 11us; 246us; 19us; 246us; 23us; 246us; 25us; 246us; 30us; 246us; 55us; 246us; 71us; 246us; 84us; 246us; 100us; 246us; 114us; 246us; 121us; 246us; 125us; 246us; 128us; 246us; 135us; 246us; 140us; 246us; 155us; 246us; 158us; 246us; 161us; 246us; 164us; 246us; 167us; 246us; 170us; 246us; 173us; 246us; 176us; 246us; 179us; 246us; 181us; 246us; 183us; 246us; 185us; 246us; 187us; 246us; 189us; 246us; 191us; 246us; 194us; 246us; 196us; 246us; 198us; 246us; 201us; 246us; 204us; 246us; 206us; 246us; 209us; 246us; 211us; 246us; 213us; 246us; 216us; 246us; 218us; 246us; 221us; 246us; 223us; 246us; 226us; 246us; 229us; 246us; 236us; 246us; 247us; 246us; 250us; 246us; 253us; 246us; 255us; 246us; 258us; 246us; 261us; 246us; 263us; 246us; 267us; 246us; 270us; 246us; 272us; 246us; 274us; 246us; 276us; 246us; 61us; 65535us; 4us; 133us; 7us; 133us; 11us; 133us; 19us; 133us; 23us; 133us; 25us; 133us; 30us; 133us; 55us; 133us; 71us; 133us; 84us; 133us; 100us; 133us; 114us; 133us; 121us; 133us; 125us; 133us; 128us; 133us; 135us; 133us; 137us; 138us; 140us; 133us; 155us; 133us; 158us; 133us; 161us; 133us; 164us; 133us; 167us; 133us; 170us; 133us; 173us; 133us; 176us; 133us; 179us; 133us; 181us; 133us; 183us; 133us; 185us; 133us; 187us; 133us; 189us; 133us; 191us; 133us; 194us; 133us; 196us; 133us; 198us; 133us; 201us; 133us; 204us; 133us; 206us; 133us; 209us; 133us; 211us; 133us; 213us; 133us; 216us; 133us; 218us; 133us; 221us; 133us; 223us; 133us; 226us; 133us; 229us; 133us; 236us; 133us; 247us; 133us; 250us; 133us; 253us; 133us; 255us; 133us; 258us; 133us; 261us; 133us; 263us; 133us; 267us; 133us; 270us; 133us; 272us; 133us; 274us; 133us; 276us; 133us; 3us; 65535us; 133us; 134us; 138us; 139us; 144us; 145us; 60us; 65535us; 4us; 244us; 7us; 244us; 11us; 244us; 19us; 244us; 23us; 244us; 25us; 244us; 30us; 244us; 55us; 244us; 71us; 244us; 84us; 244us; 100us; 244us; 114us; 244us; 121us; 244us; 125us; 244us; 128us; 244us; 135us; 244us; 140us; 244us; 155us; 244us; 158us; 244us; 161us; 244us; 164us; 244us; 167us; 244us; 170us; 244us; 173us; 244us; 176us; 244us; 179us; 244us; 181us; 244us; 183us; 244us; 185us; 244us; 187us; 244us; 189us; 244us; 191us; 244us; 194us; 244us; 196us; 244us; 198us; 244us; 201us; 244us; 204us; 244us; 206us; 244us; 209us; 244us; 211us; 244us; 213us; 244us; 216us; 244us; 218us; 244us; 221us; 244us; 223us; 244us; 226us; 244us; 229us; 244us; 236us; 244us; 247us; 244us; 250us; 244us; 253us; 244us; 255us; 244us; 258us; 244us; 261us; 244us; 263us; 244us; 267us; 244us; 270us; 244us; 272us; 244us; 274us; 244us; 276us; 244us; 4us; 65535us; 14us; 15us; 49us; 146us; 147us; 148us; 149us; 150us; 4us; 65535us; 14us; 149us; 49us; 149us; 147us; 149us; 149us; 149us; 60us; 65535us; 4us; 16us; 7us; 16us; 11us; 16us; 19us; 16us; 23us; 16us; 25us; 16us; 30us; 16us; 55us; 16us; 71us; 16us; 84us; 16us; 100us; 16us; 114us; 16us; 121us; 16us; 125us; 16us; 128us; 16us; 135us; 16us; 140us; 16us; 155us; 16us; 158us; 16us; 161us; 16us; 164us; 16us; 167us; 16us; 170us; 16us; 173us; 16us; 176us; 16us; 179us; 16us; 181us; 16us; 183us; 16us; 185us; 16us; 187us; 16us; 189us; 16us; 191us; 16us; 194us; 16us; 196us; 16us; 198us; 16us; 201us; 16us; 204us; 16us; 206us; 16us; 209us; 16us; 211us; 16us; 213us; 16us; 216us; 16us; 218us; 16us; 221us; 16us; 223us; 16us; 226us; 16us; 229us; 16us; 236us; 16us; 247us; 16us; 250us; 16us; 253us; 16us; 255us; 16us; 258us; 16us; 261us; 16us; 263us; 16us; 267us; 16us; 270us; 16us; 272us; 16us; 274us; 16us; 276us; 16us; 60us; 65535us; 4us; 154us; 7us; 154us; 11us; 154us; 19us; 154us; 23us; 154us; 25us; 154us; 30us; 154us; 55us; 154us; 71us; 154us; 84us; 154us; 100us; 154us; 114us; 154us; 121us; 154us; 125us; 154us; 128us; 154us; 135us; 154us; 140us; 154us; 155us; 154us; 158us; 154us; 161us; 154us; 164us; 154us; 167us; 154us; 170us; 154us; 173us; 154us; 176us; 154us; 179us; 154us; 181us; 154us; 183us; 154us; 185us; 154us; 187us; 154us; 189us; 154us; 191us; 154us; 194us; 154us; 196us; 154us; 198us; 154us; 201us; 154us; 204us; 154us; 206us; 154us; 209us; 154us; 211us; 154us; 213us; 154us; 216us; 154us; 218us; 154us; 221us; 154us; 223us; 154us; 226us; 154us; 229us; 154us; 236us; 154us; 247us; 154us; 250us; 154us; 253us; 154us; 255us; 154us; 258us; 154us; 261us; 154us; 263us; 154us; 267us; 154us; 270us; 154us; 272us; 154us; 274us; 154us; 276us; 154us; 60us; 65535us; 4us; 157us; 7us; 157us; 11us; 157us; 19us; 157us; 23us; 157us; 25us; 157us; 30us; 157us; 55us; 157us; 71us; 157us; 84us; 157us; 100us; 157us; 114us; 157us; 121us; 157us; 125us; 157us; 128us; 157us; 135us; 157us; 140us; 157us; 155us; 156us; 158us; 157us; 161us; 157us; 164us; 157us; 167us; 157us; 170us; 157us; 173us; 157us; 176us; 157us; 179us; 157us; 181us; 157us; 183us; 157us; 185us; 157us; 187us; 157us; 189us; 157us; 191us; 157us; 194us; 157us; 196us; 157us; 198us; 157us; 201us; 157us; 204us; 157us; 206us; 157us; 209us; 157us; 211us; 157us; 213us; 157us; 216us; 157us; 218us; 157us; 221us; 157us; 223us; 157us; 226us; 157us; 229us; 157us; 236us; 157us; 247us; 157us; 250us; 157us; 253us; 157us; 255us; 157us; 258us; 157us; 261us; 157us; 263us; 157us; 267us; 157us; 270us; 157us; 272us; 157us; 274us; 157us; 276us; 157us; 60us; 65535us; 4us; 160us; 7us; 160us; 11us; 160us; 19us; 160us; 23us; 160us; 25us; 160us; 30us; 160us; 55us; 160us; 71us; 160us; 84us; 160us; 100us; 160us; 114us; 160us; 121us; 160us; 125us; 160us; 128us; 160us; 135us; 160us; 140us; 160us; 155us; 160us; 158us; 159us; 161us; 160us; 164us; 160us; 167us; 160us; 170us; 160us; 173us; 160us; 176us; 160us; 179us; 160us; 181us; 160us; 183us; 160us; 185us; 160us; 187us; 160us; 189us; 160us; 191us; 160us; 194us; 160us; 196us; 160us; 198us; 160us; 201us; 160us; 204us; 160us; 206us; 160us; 209us; 160us; 211us; 160us; 213us; 160us; 216us; 160us; 218us; 160us; 221us; 160us; 223us; 160us; 226us; 160us; 229us; 160us; 236us; 160us; 247us; 160us; 250us; 160us; 253us; 160us; 255us; 160us; 258us; 160us; 261us; 160us; 263us; 160us; 267us; 160us; 270us; 160us; 272us; 160us; 274us; 160us; 276us; 160us; 60us; 65535us; 4us; 163us; 7us; 163us; 11us; 163us; 19us; 163us; 23us; 163us; 25us; 163us; 30us; 163us; 55us; 163us; 71us; 163us; 84us; 163us; 100us; 163us; 114us; 163us; 121us; 163us; 125us; 163us; 128us; 163us; 135us; 163us; 140us; 163us; 155us; 163us; 158us; 163us; 161us; 162us; 164us; 163us; 167us; 163us; 170us; 163us; 173us; 163us; 176us; 163us; 179us; 163us; 181us; 163us; 183us; 163us; 185us; 163us; 187us; 163us; 189us; 163us; 191us; 163us; 194us; 163us; 196us; 163us; 198us; 163us; 201us; 163us; 204us; 163us; 206us; 163us; 209us; 163us; 211us; 163us; 213us; 163us; 216us; 163us; 218us; 163us; 221us; 163us; 223us; 163us; 226us; 163us; 229us; 163us; 236us; 163us; 247us; 163us; 250us; 163us; 253us; 163us; 255us; 163us; 258us; 163us; 261us; 163us; 263us; 163us; 267us; 163us; 270us; 163us; 272us; 163us; 274us; 163us; 276us; 163us; 60us; 65535us; 4us; 166us; 7us; 166us; 11us; 166us; 19us; 166us; 23us; 166us; 25us; 166us; 30us; 166us; 55us; 166us; 71us; 166us; 84us; 166us; 100us; 166us; 114us; 166us; 121us; 166us; 125us; 166us; 128us; 166us; 135us; 166us; 140us; 166us; 155us; 166us; 158us; 166us; 161us; 166us; 164us; 165us; 167us; 166us; 170us; 166us; 173us; 166us; 176us; 166us; 179us; 166us; 181us; 166us; 183us; 166us; 185us; 166us; 187us; 166us; 189us; 166us; 191us; 166us; 194us; 166us; 196us; 166us; 198us; 166us; 201us; 166us; 204us; 166us; 206us; 166us; 209us; 166us; 211us; 166us; 213us; 166us; 216us; 166us; 218us; 166us; 221us; 166us; 223us; 166us; 226us; 166us; 229us; 166us; 236us; 166us; 247us; 166us; 250us; 166us; 253us; 166us; 255us; 166us; 258us; 166us; 261us; 166us; 263us; 166us; 267us; 166us; 270us; 166us; 272us; 166us; 274us; 166us; 276us; 166us; 60us; 65535us; 4us; 169us; 7us; 169us; 11us; 169us; 19us; 169us; 23us; 169us; 25us; 169us; 30us; 169us; 55us; 169us; 71us; 169us; 84us; 169us; 100us; 169us; 114us; 169us; 121us; 169us; 125us; 169us; 128us; 169us; 135us; 169us; 140us; 169us; 155us; 169us; 158us; 169us; 161us; 169us; 164us; 169us; 167us; 168us; 170us; 169us; 173us; 169us; 176us; 169us; 179us; 169us; 181us; 169us; 183us; 169us; 185us; 169us; 187us; 169us; 189us; 169us; 191us; 169us; 194us; 169us; 196us; 169us; 198us; 169us; 201us; 169us; 204us; 169us; 206us; 169us; 209us; 169us; 211us; 169us; 213us; 169us; 216us; 169us; 218us; 169us; 221us; 169us; 223us; 169us; 226us; 169us; 229us; 169us; 236us; 169us; 247us; 169us; 250us; 169us; 253us; 169us; 255us; 169us; 258us; 169us; 261us; 169us; 263us; 169us; 267us; 169us; 270us; 169us; 272us; 169us; 274us; 169us; 276us; 169us; 60us; 65535us; 4us; 172us; 7us; 172us; 11us; 172us; 19us; 172us; 23us; 172us; 25us; 172us; 30us; 172us; 55us; 172us; 71us; 172us; 84us; 172us; 100us; 172us; 114us; 172us; 121us; 172us; 125us; 172us; 128us; 172us; 135us; 172us; 140us; 172us; 155us; 172us; 158us; 172us; 161us; 172us; 164us; 172us; 167us; 172us; 170us; 171us; 173us; 172us; 176us; 172us; 179us; 172us; 181us; 172us; 183us; 172us; 185us; 172us; 187us; 172us; 189us; 172us; 191us; 172us; 194us; 172us; 196us; 172us; 198us; 172us; 201us; 172us; 204us; 172us; 206us; 172us; 209us; 172us; 211us; 172us; 213us; 172us; 216us; 172us; 218us; 172us; 221us; 172us; 223us; 172us; 226us; 172us; 229us; 172us; 236us; 172us; 247us; 172us; 250us; 172us; 253us; 172us; 255us; 172us; 258us; 172us; 261us; 172us; 263us; 172us; 267us; 172us; 270us; 172us; 272us; 172us; 274us; 172us; 276us; 172us; 60us; 65535us; 4us; 175us; 7us; 175us; 11us; 175us; 19us; 175us; 23us; 175us; 25us; 175us; 30us; 175us; 55us; 175us; 71us; 175us; 84us; 175us; 100us; 175us; 114us; 175us; 121us; 175us; 125us; 175us; 128us; 175us; 135us; 175us; 140us; 175us; 155us; 175us; 158us; 175us; 161us; 175us; 164us; 175us; 167us; 175us; 170us; 175us; 173us; 174us; 176us; 175us; 179us; 175us; 181us; 175us; 183us; 175us; 185us; 175us; 187us; 175us; 189us; 175us; 191us; 175us; 194us; 175us; 196us; 175us; 198us; 175us; 201us; 175us; 204us; 175us; 206us; 175us; 209us; 175us; 211us; 175us; 213us; 175us; 216us; 175us; 218us; 175us; 221us; 175us; 223us; 175us; 226us; 175us; 229us; 175us; 236us; 175us; 247us; 175us; 250us; 175us; 253us; 175us; 255us; 175us; 258us; 175us; 261us; 175us; 263us; 175us; 267us; 175us; 270us; 175us; 272us; 175us; 274us; 175us; 276us; 175us; 60us; 65535us; 4us; 178us; 7us; 178us; 11us; 178us; 19us; 178us; 23us; 178us; 25us; 178us; 30us; 178us; 55us; 178us; 71us; 178us; 84us; 178us; 100us; 178us; 114us; 178us; 121us; 178us; 125us; 178us; 128us; 178us; 135us; 178us; 140us; 178us; 155us; 178us; 158us; 178us; 161us; 178us; 164us; 178us; 167us; 178us; 170us; 178us; 173us; 178us; 176us; 177us; 179us; 178us; 181us; 178us; 183us; 178us; 185us; 178us; 187us; 178us; 189us; 178us; 191us; 178us; 194us; 178us; 196us; 178us; 198us; 178us; 201us; 178us; 204us; 178us; 206us; 178us; 209us; 178us; 211us; 178us; 213us; 178us; 216us; 178us; 218us; 178us; 221us; 178us; 223us; 178us; 226us; 178us; 229us; 178us; 236us; 178us; 247us; 178us; 250us; 178us; 253us; 178us; 255us; 178us; 258us; 178us; 261us; 178us; 263us; 178us; 267us; 178us; 270us; 178us; 272us; 178us; 274us; 178us; 276us; 178us; 60us; 65535us; 4us; 193us; 7us; 193us; 11us; 193us; 19us; 193us; 23us; 193us; 25us; 193us; 30us; 193us; 55us; 193us; 71us; 193us; 84us; 193us; 100us; 193us; 114us; 193us; 121us; 193us; 125us; 193us; 128us; 193us; 135us; 193us; 140us; 193us; 155us; 193us; 158us; 193us; 161us; 193us; 164us; 193us; 167us; 193us; 170us; 193us; 173us; 193us; 176us; 193us; 179us; 180us; 181us; 182us; 183us; 184us; 185us; 186us; 187us; 188us; 189us; 190us; 191us; 192us; 194us; 193us; 196us; 193us; 198us; 193us; 201us; 193us; 204us; 193us; 206us; 193us; 209us; 193us; 211us; 193us; 213us; 193us; 216us; 193us; 218us; 193us; 221us; 193us; 223us; 193us; 226us; 193us; 229us; 193us; 236us; 193us; 247us; 193us; 250us; 193us; 253us; 193us; 255us; 193us; 258us; 193us; 261us; 193us; 263us; 193us; 267us; 193us; 270us; 193us; 272us; 193us; 274us; 193us; 276us; 193us; 60us; 65535us; 4us; 200us; 7us; 200us; 11us; 200us; 19us; 200us; 23us; 200us; 25us; 200us; 30us; 200us; 55us; 200us; 71us; 200us; 84us; 200us; 100us; 200us; 114us; 200us; 121us; 200us; 125us; 200us; 128us; 200us; 135us; 200us; 140us; 200us; 155us; 200us; 158us; 200us; 161us; 200us; 164us; 200us; 167us; 200us; 170us; 200us; 173us; 200us; 176us; 200us; 179us; 200us; 181us; 200us; 183us; 200us; 185us; 200us; 187us; 200us; 189us; 200us; 191us; 200us; 194us; 195us; 196us; 197us; 198us; 199us; 201us; 200us; 204us; 200us; 206us; 200us; 209us; 200us; 211us; 200us; 213us; 200us; 216us; 200us; 218us; 200us; 221us; 200us; 223us; 200us; 226us; 200us; 229us; 200us; 236us; 200us; 247us; 200us; 250us; 200us; 253us; 200us; 255us; 200us; 258us; 200us; 261us; 200us; 263us; 200us; 267us; 200us; 270us; 200us; 272us; 200us; 274us; 200us; 276us; 200us; 60us; 65535us; 4us; 203us; 7us; 203us; 11us; 203us; 19us; 203us; 23us; 203us; 25us; 203us; 30us; 203us; 55us; 203us; 71us; 203us; 84us; 203us; 100us; 203us; 114us; 203us; 121us; 203us; 125us; 203us; 128us; 203us; 135us; 203us; 140us; 203us; 155us; 203us; 158us; 203us; 161us; 203us; 164us; 203us; 167us; 203us; 170us; 203us; 173us; 203us; 176us; 203us; 179us; 203us; 181us; 203us; 183us; 203us; 185us; 203us; 187us; 203us; 189us; 203us; 191us; 203us; 194us; 203us; 196us; 203us; 198us; 203us; 201us; 202us; 204us; 203us; 206us; 203us; 209us; 203us; 211us; 203us; 213us; 203us; 216us; 203us; 218us; 203us; 221us; 203us; 223us; 203us; 226us; 203us; 229us; 203us; 236us; 203us; 247us; 203us; 250us; 203us; 253us; 203us; 255us; 203us; 258us; 203us; 261us; 203us; 263us; 203us; 267us; 203us; 270us; 203us; 272us; 203us; 274us; 203us; 276us; 203us; 60us; 65535us; 4us; 208us; 7us; 208us; 11us; 208us; 19us; 208us; 23us; 208us; 25us; 208us; 30us; 208us; 55us; 208us; 71us; 208us; 84us; 208us; 100us; 208us; 114us; 208us; 121us; 208us; 125us; 208us; 128us; 208us; 135us; 208us; 140us; 208us; 155us; 208us; 158us; 208us; 161us; 208us; 164us; 208us; 167us; 208us; 170us; 208us; 173us; 208us; 176us; 208us; 179us; 208us; 181us; 208us; 183us; 208us; 185us; 208us; 187us; 208us; 189us; 208us; 191us; 208us; 194us; 208us; 196us; 208us; 198us; 208us; 201us; 208us; 204us; 205us; 206us; 207us; 209us; 208us; 211us; 208us; 213us; 208us; 216us; 208us; 218us; 208us; 221us; 208us; 223us; 208us; 226us; 208us; 229us; 208us; 236us; 208us; 247us; 208us; 250us; 208us; 253us; 208us; 255us; 208us; 258us; 208us; 261us; 208us; 263us; 208us; 267us; 208us; 270us; 208us; 272us; 208us; 274us; 208us; 276us; 208us; 64us; 65535us; 4us; 220us; 7us; 220us; 11us; 220us; 14us; 151us; 19us; 220us; 23us; 220us; 25us; 220us; 30us; 220us; 49us; 151us; 55us; 220us; 71us; 220us; 84us; 220us; 100us; 220us; 114us; 220us; 121us; 220us; 125us; 220us; 128us; 220us; 135us; 220us; 140us; 220us; 147us; 151us; 149us; 151us; 155us; 220us; 158us; 220us; 161us; 220us; 164us; 220us; 167us; 220us; 170us; 220us; 173us; 220us; 176us; 220us; 179us; 220us; 181us; 220us; 183us; 220us; 185us; 220us; 187us; 220us; 189us; 220us; 191us; 220us; 194us; 220us; 196us; 220us; 198us; 220us; 201us; 220us; 204us; 220us; 206us; 220us; 209us; 220us; 211us; 220us; 213us; 220us; 216us; 220us; 218us; 220us; 221us; 220us; 223us; 220us; 226us; 220us; 229us; 220us; 236us; 220us; 247us; 220us; 250us; 220us; 253us; 220us; 255us; 220us; 258us; 220us; 261us; 220us; 263us; 220us; 267us; 220us; 270us; 220us; 272us; 220us; 274us; 220us; 276us; 220us; 60us; 65535us; 4us; 215us; 7us; 215us; 11us; 215us; 19us; 215us; 23us; 215us; 25us; 215us; 30us; 215us; 55us; 215us; 71us; 215us; 84us; 215us; 100us; 215us; 114us; 215us; 121us; 215us; 125us; 215us; 128us; 215us; 135us; 215us; 140us; 215us; 155us; 215us; 158us; 215us; 161us; 215us; 164us; 215us; 167us; 215us; 170us; 215us; 173us; 215us; 176us; 215us; 179us; 215us; 181us; 215us; 183us; 215us; 185us; 215us; 187us; 215us; 189us; 215us; 191us; 215us; 194us; 215us; 196us; 215us; 198us; 215us; 201us; 215us; 204us; 215us; 206us; 215us; 209us; 210us; 211us; 212us; 213us; 214us; 216us; 215us; 218us; 215us; 221us; 215us; 223us; 215us; 226us; 215us; 229us; 215us; 236us; 215us; 247us; 215us; 250us; 215us; 253us; 215us; 255us; 215us; 258us; 215us; 261us; 215us; 263us; 215us; 267us; 215us; 270us; 215us; 272us; 215us; 274us; 215us; 276us; 215us; 60us; 65535us; 4us; 225us; 7us; 225us; 11us; 225us; 19us; 225us; 23us; 225us; 25us; 225us; 30us; 225us; 55us; 225us; 71us; 225us; 84us; 225us; 100us; 225us; 114us; 225us; 121us; 225us; 125us; 225us; 128us; 225us; 135us; 225us; 140us; 225us; 155us; 225us; 158us; 225us; 161us; 225us; 164us; 225us; 167us; 225us; 170us; 225us; 173us; 225us; 176us; 225us; 179us; 225us; 181us; 225us; 183us; 225us; 185us; 225us; 187us; 225us; 189us; 225us; 191us; 225us; 194us; 225us; 196us; 225us; 198us; 225us; 201us; 225us; 204us; 225us; 206us; 225us; 209us; 225us; 211us; 225us; 213us; 225us; 216us; 217us; 218us; 219us; 221us; 222us; 223us; 224us; 226us; 225us; 229us; 225us; 236us; 225us; 247us; 225us; 250us; 225us; 253us; 225us; 255us; 225us; 258us; 225us; 261us; 225us; 263us; 225us; 267us; 225us; 270us; 225us; 272us; 225us; 274us; 225us; 276us; 225us; 64us; 65535us; 4us; 243us; 7us; 243us; 11us; 243us; 14us; 153us; 19us; 243us; 23us; 243us; 25us; 243us; 30us; 243us; 49us; 153us; 55us; 243us; 71us; 243us; 84us; 243us; 100us; 243us; 114us; 243us; 121us; 243us; 125us; 243us; 128us; 243us; 135us; 243us; 140us; 243us; 147us; 153us; 149us; 153us; 155us; 243us; 158us; 243us; 161us; 243us; 164us; 243us; 167us; 243us; 170us; 243us; 173us; 243us; 176us; 243us; 179us; 243us; 181us; 243us; 183us; 243us; 185us; 243us; 187us; 243us; 189us; 243us; 191us; 243us; 194us; 243us; 196us; 243us; 198us; 243us; 201us; 243us; 204us; 243us; 206us; 243us; 209us; 243us; 211us; 243us; 213us; 243us; 216us; 243us; 218us; 243us; 221us; 243us; 223us; 243us; 226us; 243us; 229us; 243us; 236us; 243us; 247us; 243us; 250us; 243us; 253us; 243us; 255us; 243us; 258us; 243us; 261us; 243us; 263us; 243us; 267us; 243us; 270us; 243us; 272us; 243us; 274us; 243us; 276us; 243us; 4us; 65535us; 6us; 93us; 87us; 90us; 88us; 89us; 92us; 93us; 60us; 65535us; 4us; 228us; 7us; 228us; 11us; 228us; 19us; 228us; 23us; 228us; 25us; 228us; 30us; 228us; 55us; 228us; 71us; 228us; 84us; 228us; 100us; 228us; 114us; 228us; 121us; 228us; 125us; 228us; 128us; 228us; 135us; 228us; 140us; 228us; 155us; 228us; 158us; 228us; 161us; 228us; 164us; 228us; 167us; 228us; 170us; 228us; 173us; 228us; 176us; 228us; 179us; 228us; 181us; 228us; 183us; 228us; 185us; 228us; 187us; 228us; 189us; 228us; 191us; 228us; 194us; 228us; 196us; 228us; 198us; 228us; 201us; 228us; 204us; 228us; 206us; 228us; 209us; 228us; 211us; 228us; 213us; 228us; 216us; 228us; 218us; 228us; 221us; 228us; 223us; 228us; 226us; 227us; 229us; 228us; 236us; 228us; 247us; 228us; 250us; 228us; 253us; 228us; 255us; 228us; 258us; 228us; 261us; 228us; 263us; 228us; 267us; 228us; 270us; 228us; 272us; 228us; 274us; 228us; 276us; 228us; 60us; 65535us; 4us; 269us; 7us; 269us; 11us; 269us; 19us; 269us; 23us; 269us; 25us; 269us; 30us; 269us; 55us; 269us; 71us; 269us; 84us; 269us; 100us; 269us; 114us; 269us; 121us; 269us; 125us; 269us; 128us; 269us; 135us; 269us; 140us; 269us; 155us; 269us; 158us; 269us; 161us; 269us; 164us; 269us; 167us; 269us; 170us; 269us; 173us; 269us; 176us; 269us; 179us; 269us; 181us; 269us; 183us; 269us; 185us; 269us; 187us; 269us; 189us; 269us; 191us; 269us; 194us; 269us; 196us; 269us; 198us; 269us; 201us; 269us; 204us; 269us; 206us; 269us; 209us; 269us; 211us; 269us; 213us; 269us; 216us; 269us; 218us; 269us; 221us; 269us; 223us; 269us; 226us; 269us; 229us; 269us; 236us; 269us; 247us; 269us; 250us; 269us; 253us; 269us; 255us; 269us; 258us; 269us; 261us; 269us; 263us; 269us; 267us; 269us; 270us; 269us; 272us; 269us; 274us; 269us; 276us; 269us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 66us; 75us; 112us; 121us; 187us; 253us; 320us; 388us; 454us; 520us; 523us; 589us; 593us; 602us; 611us; 672us; 733us; 737us; 741us; 745us; 750us; 755us; 758us; 761us; 764us; 770us; 831us; 893us; 897us; 958us; 963us; 968us; 1029us; 1090us; 1151us; 1212us; 1273us; 1334us; 1395us; 1456us; 1517us; 1578us; 1639us; 1700us; 1761us; 1822us; 1887us; 1948us; 2009us; 2074us; 2079us; 2140us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 2us; 2us; 43us; 2us; 2us; 43us; 1us; 2us; 1us; 2us; 1us; 3us; 4us; 4us; 18us; 130us; 131us; 3us; 4us; 130us; 131us; 5us; 4us; 13us; 14us; 130us; 149us; 2us; 4us; 130us; 2us; 4us; 130us; 1us; 4us; 1us; 5us; 3us; 6us; 41us; 42us; 3us; 6us; 41us; 42us; 3us; 6us; 41us; 42us; 2us; 6us; 149us; 1us; 7us; 1us; 9us; 2us; 9us; 14us; 2us; 11us; 12us; 1us; 12us; 1us; 12us; 4us; 13us; 14us; 130us; 149us; 4us; 13us; 14us; 132us; 149us; 3us; 13us; 14us; 149us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 2us; 18us; 46us; 3us; 18us; 130us; 131us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 3us; 22us; 24us; 25us; 4us; 22us; 24us; 25us; 66us; 1us; 23us; 2us; 24us; 25us; 1us; 24us; 1us; 24us; 1us; 26us; 1us; 27us; 2us; 27us; 77us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 28us; 3us; 29us; 30us; 31us; 3us; 30us; 31us; 149us; 2us; 30us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 4us; 34us; 35us; 36us; 37us; 2us; 34us; 35us; 2us; 34us; 35us; 2us; 34us; 35us; 2us; 34us; 35us; 3us; 34us; 35us; 149us; 2us; 34us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 3us; 36us; 37us; 38us; 2us; 36us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 2us; 40us; 149us; 1us; 40us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 45us; 1us; 46us; 2us; 46us; 149us; 1us; 46us; 1us; 46us; 3us; 47us; 48us; 49us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 1us; 51us; 7us; 52us; 53us; 54us; 57us; 58us; 59us; 60us; 3us; 52us; 53us; 54us; 2us; 52us; 149us; 1us; 53us; 2us; 55us; 56us; 1us; 56us; 1us; 56us; 4us; 57us; 58us; 59us; 60us; 3us; 57us; 58us; 59us; 2us; 57us; 149us; 1us; 58us; 2us; 61us; 62us; 1us; 62us; 1us; 62us; 2us; 63us; 64us; 1us; 63us; 2us; 63us; 149us; 1us; 65us; 2us; 67us; 149us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 70us; 2us; 70us; 149us; 2us; 71us; 78us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 71us; 149us; 1us; 72us; 1us; 73us; 2us; 75us; 76us; 1us; 75us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 1us; 79us; 1us; 81us; 1us; 82us; 1us; 83us; 2us; 84us; 85us; 1us; 85us; 3us; 85us; 86us; 87us; 2us; 86us; 87us; 1us; 87us; 3us; 87us; 88us; 89us; 2us; 88us; 89us; 1us; 89us; 3us; 89us; 90us; 91us; 2us; 90us; 91us; 1us; 91us; 3us; 91us; 92us; 93us; 2us; 92us; 93us; 1us; 93us; 3us; 93us; 94us; 95us; 2us; 94us; 95us; 1us; 95us; 3us; 95us; 96us; 97us; 2us; 96us; 97us; 1us; 97us; 3us; 97us; 98us; 99us; 2us; 98us; 99us; 1us; 99us; 9us; 99us; 100us; 101us; 102us; 103us; 104us; 105us; 106us; 107us; 8us; 100us; 101us; 102us; 103us; 104us; 105us; 106us; 107us; 1us; 101us; 5us; 101us; 108us; 109us; 110us; 111us; 1us; 102us; 5us; 102us; 108us; 109us; 110us; 111us; 1us; 103us; 5us; 103us; 108us; 109us; 110us; 111us; 1us; 104us; 5us; 104us; 108us; 109us; 110us; 111us; 1us; 105us; 5us; 105us; 108us; 109us; 110us; 111us; 1us; 106us; 5us; 106us; 108us; 109us; 110us; 111us; 1us; 107us; 5us; 107us; 108us; 109us; 110us; 111us; 4us; 108us; 109us; 110us; 111us; 1us; 109us; 3us; 109us; 112us; 113us; 1us; 110us; 3us; 110us; 112us; 113us; 1us; 111us; 3us; 111us; 112us; 113us; 2us; 112us; 113us; 1us; 113us; 4us; 113us; 114us; 115us; 116us; 3us; 114us; 115us; 116us; 1us; 115us; 5us; 115us; 117us; 118us; 119us; 120us; 1us; 116us; 5us; 116us; 117us; 118us; 119us; 120us; 4us; 117us; 118us; 119us; 120us; 1us; 118us; 2us; 118us; 121us; 1us; 119us; 2us; 119us; 121us; 1us; 120us; 2us; 120us; 121us; 1us; 121us; 1us; 122us; 3us; 122us; 127us; 128us; 1us; 123us; 3us; 123us; 127us; 128us; 1us; 124us; 1us; 125us; 3us; 125us; 127us; 128us; 1us; 126us; 3us; 126us; 127us; 128us; 2us; 127us; 128us; 1us; 128us; 2us; 128us; 129us; 1us; 129us; 2us; 130us; 131us; 1us; 130us; 1us; 130us; 1us; 131us; 1us; 131us; 1us; 131us; 2us; 132us; 133us; 2us; 132us; 133us; 1us; 132us; 1us; 132us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 137us; 1us; 138us; 2us; 139us; 140us; 3us; 139us; 140us; 149us; 2us; 139us; 140us; 2us; 139us; 140us; 3us; 139us; 140us; 149us; 1us; 139us; 1us; 139us; 2us; 139us; 149us; 2us; 141us; 142us; 3us; 141us; 142us; 149us; 2us; 141us; 142us; 2us; 141us; 142us; 3us; 141us; 142us; 149us; 1us; 141us; 1us; 141us; 2us; 141us; 149us; 1us; 143us; 2us; 143us; 149us; 1us; 143us; 1us; 143us; 1us; 143us; 1us; 143us; 5us; 144us; 145us; 146us; 147us; 148us; 1us; 145us; 2us; 145us; 149us; 1us; 146us; 2us; 146us; 149us; 1us; 147us; 2us; 147us; 149us; 1us; 148us; 2us; 148us; 149us; 1us; 149us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 11us; 14us; 17us; 19us; 21us; 23us; 28us; 32us; 38us; 41us; 44us; 46us; 48us; 52us; 56us; 60us; 63us; 65us; 67us; 70us; 73us; 75us; 77us; 82us; 87us; 91us; 93us; 95us; 97us; 99us; 101us; 104us; 108us; 110us; 112us; 114us; 116us; 120us; 125us; 127us; 130us; 132us; 134us; 136us; 138us; 141us; 143us; 145us; 147us; 149us; 151us; 155us; 159us; 162us; 164us; 166us; 168us; 170us; 172us; 174us; 176us; 178us; 180us; 185us; 188us; 191us; 194us; 197us; 201us; 204us; 206us; 208us; 210us; 214us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 232us; 234us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 260us; 262us; 264us; 267us; 269us; 271us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 299us; 303us; 306us; 308us; 311us; 313us; 315us; 320us; 324us; 327us; 329us; 332us; 334us; 336us; 339us; 341us; 344us; 346us; 349us; 351us; 353us; 355us; 357us; 360us; 363us; 365us; 367us; 369us; 372us; 374us; 376us; 379us; 381us; 383us; 385us; 387us; 390us; 392us; 394us; 396us; 398us; 401us; 403us; 407us; 410us; 412us; 416us; 419us; 421us; 425us; 428us; 430us; 434us; 437us; 439us; 443us; 446us; 448us; 452us; 455us; 457us; 461us; 464us; 466us; 476us; 485us; 487us; 493us; 495us; 501us; 503us; 509us; 511us; 517us; 519us; 525us; 527us; 533us; 535us; 541us; 546us; 548us; 552us; 554us; 558us; 560us; 564us; 567us; 569us; 574us; 578us; 580us; 586us; 588us; 594us; 599us; 601us; 604us; 606us; 609us; 611us; 614us; 616us; 618us; 622us; 624us; 628us; 630us; 632us; 636us; 638us; 642us; 645us; 647us; 650us; 652us; 655us; 657us; 659us; 661us; 663us; 665us; 668us; 671us; 673us; 675us; 677us; 679us; 681us; 683us; 685us; 687us; 689us; 691us; 694us; 698us; 701us; 704us; 708us; 710us; 712us; 715us; 718us; 722us; 725us; 728us; 732us; 734us; 736us; 739us; 741us; 744us; 746us; 748us; 750us; 752us; 758us; 760us; 763us; 765us; 768us; 770us; 773us; 775us; 778us; |]
let _fsyacc_action_rows = 279
let _fsyacc_actionTableElements = [|1us; 16392us; 75us; 22us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 5us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 2us; 16392us; 75us; 22us; 82us; 235us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16386us; 0us; 16387us; 2us; 16392us; 75us; 22us; 81us; 37us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 23us; 1us; 32768us; 81us; 14us; 8us; 16514us; 5us; 216us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 78us; 62us; 80us; 50us; 82us; 36us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 56us; 18us; 1us; 32768us; 17us; 19us; 19us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 87us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 29us; 16390us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 0us; 16391us; 0us; 16393us; 21us; 16393us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 75us; 16394us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16395us; 75us; 25us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16396us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 23us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 23us; 30us; 16397us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 30us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16401us; 2us; 16392us; 75us; 22us; 81us; 37us; 2us; 16392us; 75us; 22us; 81us; 37us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 1us; 16406us; 63us; 45us; 1us; 16406us; 63us; 45us; 0us; 16407us; 1us; 16409us; 63us; 45us; 1us; 32768us; 56us; 44us; 0us; 16408us; 0us; 16410us; 0us; 16411us; 8us; 16411us; 5us; 216us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 78us; 62us; 80us; 50us; 82us; 36us; 1us; 16392us; 75us; 22us; 1us; 16392us; 75us; 22us; 1us; 16392us; 75us; 22us; 1us; 32768us; 79us; 54us; 0us; 16412us; 18us; 16413us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 22us; 1us; 16414us; 76us; 58us; 1us; 16392us; 75us; 22us; 1us; 16392us; 75us; 22us; 1us; 16392us; 75us; 22us; 0us; 16415us; 1us; 16392us; 75us; 22us; 2us; 16392us; 75us; 22us; 77us; 16417us; 1us; 16392us; 75us; 22us; 1us; 32768us; 77us; 66us; 0us; 16416us; 3us; 32768us; 56us; 77us; 59us; 83us; 80us; 84us; 1us; 16392us; 75us; 22us; 1us; 32768us; 73us; 70us; 1us; 16392us; 75us; 22us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 22us; 1us; 16418us; 76us; 74us; 1us; 16392us; 75us; 22us; 2us; 16392us; 75us; 22us; 77us; 16417us; 0us; 16419us; 2us; 16392us; 73us; 16422us; 75us; 22us; 1us; 16420us; 76us; 79us; 1us; 16392us; 75us; 22us; 2us; 16392us; 75us; 22us; 77us; 16417us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16533us; 79us; 86us; 0us; 16424us; 4us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 82us; 235us; 1us; 32768us; 82us; 235us; 0us; 16425us; 0us; 16426us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 1us; 32768us; 82us; 235us; 0us; 16427us; 1us; 16392us; 75us; 22us; 1us; 16452us; 72us; 132us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 0us; 16428us; 7us; 32768us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 78us; 62us; 80us; 50us; 82us; 35us; 0us; 16429us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 22us; 1us; 32768us; 81us; 103us; 0us; 16430us; 2us; 16431us; 34us; 105us; 61us; 108us; 1us; 16452us; 72us; 132us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 0us; 16432us; 1us; 16452us; 72us; 132us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 2us; 16444us; 17us; 114us; 73us; 121us; 19us; 16438us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 71us; 116us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16436us; 0us; 16437us; 1us; 16439us; 72us; 132us; 3us; 32768us; 56us; 82us; 59us; 83us; 80us; 84us; 0us; 16440us; 1us; 16444us; 73us; 121us; 19us; 16443us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 71us; 123us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16441us; 0us; 16442us; 1us; 16445us; 72us; 125us; 19us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 42us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 71us; 130us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16446us; 1us; 16448us; 68us; 128us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16447us; 0us; 16449us; 0us; 16451us; 0us; 16453us; 1us; 16458us; 56us; 144us; 1us; 32768us; 68us; 135us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16454us; 3us; 32768us; 1us; 143us; 43us; 142us; 56us; 41us; 1us; 16458us; 56us; 144us; 1us; 32768us; 68us; 140us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 16458us; 56us; 144us; 0us; 16459us; 0us; 16461us; 8us; 32768us; 5us; 216us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 78us; 62us; 80us; 50us; 82us; 36us; 0us; 16462us; 8us; 16464us; 5us; 216us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 78us; 62us; 80us; 50us; 82us; 36us; 0us; 16463us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 1us; 16468us; 30us; 155us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16469us; 29us; 158us; 1us; 16470us; 29us; 158us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16471us; 28us; 161us; 1us; 16472us; 28us; 161us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16473us; 27us; 164us; 1us; 16474us; 27us; 164us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16475us; 26us; 167us; 1us; 16476us; 26us; 167us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16477us; 25us; 170us; 1us; 16478us; 25us; 170us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16479us; 24us; 173us; 1us; 16480us; 24us; 173us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16481us; 23us; 176us; 1us; 16482us; 23us; 176us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 7us; 16483us; 16us; 191us; 17us; 189us; 18us; 187us; 19us; 185us; 20us; 183us; 21us; 181us; 22us; 179us; 7us; 16484us; 16us; 191us; 17us; 189us; 18us; 187us; 19us; 185us; 20us; 183us; 21us; 181us; 22us; 179us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16485us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16486us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16487us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16488us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16489us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16490us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16491us; 13us; 198us; 14us; 196us; 15us; 194us; 3us; 16492us; 13us; 198us; 14us; 196us; 15us; 194us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16493us; 12us; 201us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16494us; 12us; 201us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16495us; 12us; 201us; 1us; 16496us; 12us; 201us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 2us; 16497us; 10us; 206us; 11us; 204us; 2us; 16498us; 10us; 206us; 11us; 204us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16499us; 7us; 213us; 8us; 211us; 9us; 209us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 3us; 16500us; 7us; 213us; 8us; 211us; 9us; 209us; 3us; 16501us; 7us; 213us; 8us; 211us; 9us; 209us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16502us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16503us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16504us; 0us; 16505us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16506us; 2us; 226us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16507us; 2us; 226us; 0us; 16508us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16509us; 2us; 226us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16510us; 2us; 226us; 1us; 16511us; 2us; 226us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16512us; 0us; 16513us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 32768us; 81us; 231us; 0us; 16514us; 1us; 16392us; 75us; 22us; 1us; 32768us; 81us; 234us; 0us; 16515us; 1us; 16392us; 75us; 22us; 20us; 16394us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 38us; 91us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 50us; 17us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 32768us; 81us; 238us; 0us; 16516us; 1us; 16392us; 75us; 22us; 1us; 32768us; 81us; 241us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 0us; 16520us; 0us; 16521us; 0us; 16522us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 22us; 1us; 32768us; 47us; 250us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 39us; 16524us; 1us; 16392us; 3us; 16392us; 4us; 16392us; 6us; 16392us; 35us; 16392us; 36us; 16392us; 37us; 16392us; 38us; 16392us; 39us; 16392us; 40us; 16392us; 41us; 16392us; 42us; 16392us; 43us; 16392us; 44us; 16392us; 45us; 16392us; 46us; 16392us; 48us; 16392us; 49us; 16392us; 50us; 16392us; 51us; 16392us; 52us; 16392us; 53us; 16392us; 54us; 16392us; 55us; 16392us; 60us; 16392us; 62us; 16392us; 63us; 16392us; 64us; 16392us; 65us; 16392us; 66us; 16392us; 67us; 16392us; 69us; 16392us; 70us; 16392us; 71us; 16392us; 74us; 16392us; 75us; 22us; 83us; 16392us; 84us; 16392us; 85us; 16392us; 1us; 32768us; 46us; 253us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16523us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 30us; 16392us; 2us; 16533us; 7us; 16533us; 8us; 16533us; 9us; 16533us; 10us; 16533us; 11us; 16533us; 12us; 16533us; 13us; 16533us; 14us; 16533us; 15us; 16533us; 16us; 16533us; 17us; 16533us; 18us; 16533us; 19us; 16533us; 20us; 16533us; 21us; 16533us; 22us; 16533us; 23us; 16533us; 24us; 16533us; 25us; 16533us; 26us; 16533us; 27us; 16533us; 28us; 16533us; 29us; 16533us; 30us; 16533us; 31us; 16533us; 32us; 16533us; 33us; 16533us; 34us; 16533us; 75us; 22us; 1us; 32768us; 47us; 258us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 39us; 16526us; 1us; 16392us; 3us; 16392us; 4us; 16392us; 6us; 16392us; 35us; 16392us; 36us; 16392us; 37us; 16392us; 38us; 16392us; 39us; 16392us; 40us; 16392us; 41us; 16392us; 42us; 16392us; 43us; 16392us; 44us; 16392us; 45us; 16392us; 46us; 16392us; 48us; 16392us; 49us; 16392us; 50us; 16392us; 51us; 16392us; 52us; 16392us; 53us; 16392us; 54us; 16392us; 55us; 16392us; 60us; 16392us; 62us; 16392us; 63us; 16392us; 64us; 16392us; 65us; 16392us; 66us; 16392us; 67us; 16392us; 69us; 16392us; 70us; 16392us; 71us; 16392us; 74us; 16392us; 75us; 22us; 83us; 16392us; 84us; 16392us; 85us; 16392us; 1us; 32768us; 46us; 261us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16525us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 1us; 16533us; 73us; 265us; 1us; 16392us; 75us; 22us; 1us; 16452us; 72us; 132us; 19us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 42us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 71us; 130us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16527us; 4us; 16528us; 31us; 276us; 32us; 274us; 33us; 272us; 34us; 270us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16529us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16530us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16531us; 18us; 32768us; 1us; 143us; 3us; 223us; 4us; 221us; 5us; 216us; 6us; 218us; 42us; 263us; 43us; 142us; 48us; 255us; 49us; 247us; 56us; 41us; 57us; 34us; 58us; 33us; 59us; 32us; 67us; 98us; 70us; 137us; 78us; 62us; 80us; 50us; 82us; 10us; 0us; 16532us; 0us; 16533us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 5us; 6us; 27us; 31us; 34us; 55us; 56us; 57us; 60us; 81us; 112us; 114us; 123us; 124us; 125us; 127us; 129us; 149us; 179us; 180us; 181us; 203us; 205us; 226us; 227us; 258us; 289us; 320us; 341us; 342us; 343us; 344us; 345us; 348us; 351us; 352us; 353us; 354us; 355us; 357us; 359us; 360us; 362us; 364us; 365us; 366us; 367us; 376us; 378us; 380us; 382us; 384us; 385us; 404us; 435us; 437us; 439us; 441us; 443us; 444us; 446us; 449us; 451us; 453us; 454us; 458us; 460us; 462us; 464us; 483us; 514us; 516us; 518us; 521us; 522us; 525us; 527us; 529us; 532us; 533us; 534us; 535us; 554us; 556us; 557us; 562us; 564us; 565us; 566us; 570us; 572us; 573us; 575us; 577us; 581us; 582us; 590us; 591us; 610us; 641us; 643us; 644us; 647us; 649us; 653us; 654us; 656us; 660us; 661us; 662us; 663us; 666us; 686us; 687us; 688us; 690us; 694us; 695us; 697us; 717us; 718us; 719us; 721us; 741us; 742us; 744us; 763us; 764us; 765us; 766us; 767us; 769us; 771us; 790us; 791us; 795us; 797us; 799us; 818us; 819us; 820us; 821us; 823us; 824us; 825us; 834us; 835us; 844us; 845us; 846us; 847us; 848us; 850us; 869us; 871us; 873us; 892us; 894us; 896us; 915us; 917us; 919us; 938us; 940us; 942us; 961us; 963us; 965us; 984us; 986us; 988us; 1007us; 1009us; 1011us; 1030us; 1038us; 1046us; 1065us; 1069us; 1088us; 1092us; 1111us; 1115us; 1134us; 1138us; 1157us; 1161us; 1180us; 1184us; 1203us; 1207us; 1211us; 1230us; 1232us; 1251us; 1253us; 1272us; 1274us; 1276us; 1295us; 1298us; 1301us; 1320us; 1324us; 1343us; 1347us; 1351us; 1370us; 1371us; 1390us; 1391us; 1410us; 1411us; 1412us; 1431us; 1433us; 1452us; 1454us; 1455us; 1474us; 1476us; 1495us; 1497us; 1499us; 1518us; 1519us; 1520us; 1541us; 1543us; 1544us; 1546us; 1548us; 1549us; 1551us; 1572us; 1574us; 1575us; 1577us; 1579us; 1580us; 1581us; 1582us; 1583us; 1584us; 1585us; 1604us; 1635us; 1637us; 1656us; 1696us; 1698us; 1717us; 1718us; 1737us; 1768us; 1770us; 1789us; 1829us; 1831us; 1850us; 1851us; 1870us; 1872us; 1874us; 1876us; 1896us; 1897us; 1902us; 1921us; 1922us; 1941us; 1942us; 1961us; 1962us; 1981us; 1982us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 5us; 2us; 6us; 1us; 4us; 1us; 0us; 1us; 0us; 1us; 3us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 5us; 1us; 3us; 7us; 5us; 0us; 7us; 10us; 3us; 6us; 1us; 1us; 3us; 6us; 5us; 3us; 4us; 2us; 6us; 1us; 4us; 4us; 1us; 1us; 3us; 3us; 2us; 1us; 3us; 3us; 3us; 2us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 0us; 1us; 4us; 5us; 1us; 1us; 0us; 2us; 1us; 2us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 1us; 3us; 1us; 5us; 5us; 5us; 5us; 1us; 1us; 1us; 1us; 1us; 8us; 5us; 8us; 5us; 6us; 1us; 3us; 3us; 3us; 3us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 7us; 7us; 8us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 13us; 13us; 13us; 14us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 24us; 24us; 25us; 25us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 29us; 29us; 30us; 30us; 31us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 43us; 44us; 44us; 44us; 44us; 44us; 44us; 44us; 44us; 45us; 45us; 45us; 45us; 46us; 46us; 47us; 47us; 47us; 48us; 48us; 48us; 48us; 49us; 50us; 50us; 50us; 50us; 50us; 51us; 51us; 52us; 52us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 55us; 55us; 55us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 65535us; 65535us; 65535us; 16386us; 16387us; 65535us; 65535us; 65535us; 65535us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 16391us; 16393us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 65535us; 16398us; 16399us; 16400us; 16401us; 65535us; 65535us; 16402us; 16403us; 16404us; 16405us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 65535us; 65535us; 16424us; 65535us; 65535us; 16425us; 16426us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 16428us; 65535us; 16429us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16434us; 16435us; 65535us; 65535us; 65535us; 16437us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16449us; 65535us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 16457us; 65535us; 16459us; 16461us; 65535us; 16462us; 65535us; 16463us; 16465us; 16466us; 16467us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 65535us; 16508us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 65535us; 65535us; 16515us; 65535us; 65535us; 65535us; 16516us; 65535us; 65535us; 16517us; 16518us; 16519us; 16520us; 16521us; 16522us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16527us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16533us; |]
let _fsyacc_reductions ()  =    [| 
# 765 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ast)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 774 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                       _1 
                   )
# 119 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : ast));
# 785 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              [Module(_3, moduleType.Root, Block _5)] |> Convert.toRootExprList 
                   )
# 122 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'prog));
# 799 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                         Convert.toRootExprList _2 
                   )
# 123 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'prog));
# 811 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                               ExprEval(_3, _6) 
                   )
# 126 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'expr));
# 825 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                            _1 
                   )
# 127 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'expr));
# 836 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                    Let(_2, _4) 
                   )
# 130 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'stat));
# 848 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                   _1 
                   )
# 131 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'stat));
# 859 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                         
                   )
# 134 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'optSep));
# 869 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                   
                   )
# 135 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'optSep));
# 879 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                         [] 
                   )
# 138 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprList));
# 889 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              [_1] 
                   )
# 139 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprList));
# 900 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                 _1 :: _3 
                   )
# 140 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprList));
# 912 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              [_1] 
                   )
# 141 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprList));
# 923 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                 _1 :: _3 
                   )
# 142 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprList));
# 935 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                Str _1 
                   )
# 148 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'primitiveLiteral));
# 946 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                Number _1 
                   )
# 149 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'primitiveLiteral));
# 957 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                Convert.toSymbol _1 
                   )
# 150 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'primitiveLiteral));
# 968 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                       Unit 
                   )
# 151 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'primitiveLiteral));
# 978 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'primitiveLiteral)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                          _1 
                   )
# 154 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'literal));
# 989 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'listLiteral)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                     _1 
                   )
# 155 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'literal));
# 1000 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordLiteral)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                       _1 
                   )
# 156 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'literal));
# 1011 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    Identifier _1 
                   )
# 159 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'identifierOrPath));
# 1022 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              IdentifiersPath _1 
                   )
# 160 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'identifierOrPath));
# 1033 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'path)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                _1 :: _3 
                   )
# 163 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'path));
# 1045 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    [_1] 
                   )
# 164 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'path));
# 1056 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'literal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                 _1 
                   )
# 167 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'literalOrIdentifier));
# 1067 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identifierOrPath)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                          _1 
                   )
# 168 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'literalOrIdentifier));
# 1078 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              List _3 
                   )
# 171 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'listLiteral));
# 1091 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                [] 
                   )
# 174 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'list));
# 1102 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                            [_2] 
                   )
# 175 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'list));
# 1115 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'list)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                     _2 :: _6 
                   )
# 176 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'list));
# 1131 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'record)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            Record _3 
                   )
# 179 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'recordLiteral));
# 1144 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                         [] 
                   )
# 182 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'record));
# 1154 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                    [(_2, _6)] 
                   )
# 183 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'record));
# 1170 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'record)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                                        (_2, _6) :: _10 
                   )
# 184 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'record));
# 1188 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                  [(Identifier _2, Identifier _2)] 
                   )
# 185 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'record));
# 1201 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'record)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                      (Identifier _2, Identifier _2) :: _6 
                   )
# 186 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'record));
# 1216 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    Identifier _1 
                   )
# 189 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'key));
# 1227 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                Str _1 
                   )
# 190 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'key));
# 1238 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                _2 
                   )
# 191 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'key));
# 1249 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                                   Let(_2, Module(_5, moduleType.Assign, _6)) 
                   )
# 196 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'moduleDef));
# 1262 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                               Let(_2, Module(Identifier _2, moduleType.Assign, _5)) 
                   )
# 197 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'moduleDef));
# 1274 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             Module(_2, moduleType.Normal, _3) 
                   )
# 198 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'moduleDef));
# 1286 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'receiver)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'messageList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            SendMessages(_1, _4) 
                   )
# 203 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'sendMessages));
# 1300 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'literalOrIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                     _2 
                   )
# 206 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'receiver));
# 1311 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                  _4 |> Parens 
                   )
# 207 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'receiver));
# 1324 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'message)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                 [(Msg _1)] 
                   )
# 210 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'messageList));
# 1335 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'message)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'messageList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                    (Msg _1) :: Pipe :: _4 
                   )
# 211 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'messageList));
# 1348 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'message)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'messageList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            (Msg _1) :: Join :: _4 
                   )
# 212 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'messageList));
# 1361 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'binaryMessage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                       BinaryMessage(_1) 
                   )
# 215 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'message));
# 1372 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'keywordMessage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                        _1 |> KeywordMessage.toMessage 
                   )
# 216 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'message));
# 1383 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                      binaryMessage.Value(_1, _3) 
                   )
# 219 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'binaryMessage));
# 1395 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                          binaryMessage.Undefined(_1) 
                   )
# 220 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'binaryMessage));
# 1406 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                 binaryMessage.Undefined(_1) 
                   )
# 221 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'binaryMessage));
# 1417 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'keyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                 [_1] 
                   )
# 224 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keywordMessage));
# 1428 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'keyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'keywordMessage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                       _1 :: _3 
                   )
# 225 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keywordMessage));
# 1441 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                        keyword.Value(_1, _3) 
                   )
# 228 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keyword));
# 1453 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                            keyword.Undefined(_1) 
                   )
# 229 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keyword));
# 1464 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                   keyword.Undefined(_1) 
                   )
# 230 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keyword));
# 1475 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'key)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             keyword.Placeholder(_1) 
                   )
# 231 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'keyword));
# 1486 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'matching)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  [_1] 
                   )
# 236 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'matchingList));
# 1497 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'matching)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'matchingList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                   _1 :: _3 
                   )
# 237 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'matchingList));
# 1509 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'case)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             (_1, Some _3) 
                   )
# 240 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'matching));
# 1521 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'case)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              (_1, None) 
                   )
# 241 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'matching));
# 1532 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  case.Anything 
                   )
# 244 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'case));
# 1542 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    case.CaseIdentifier _1 
                   )
# 245 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'case));
# 1553 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              case.Expr _1 
                   )
# 246 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'case));
# 1564 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                         
                   )
# 249 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'optBar));
# 1574 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             
                   )
# 250 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'optBar));
# 1584 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'funcKw)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'argNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                        Function(true, _2, _4) 
                   )
# 255 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'func));
# 1597 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funcKw)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'argNames)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                    Function(false, _3, _5) 
                   )
# 256 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'func));
# 1610 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                 
                   )
# 259 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'funcKw));
# 1620 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                
                   )
# 260 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'funcKw));
# 1630 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                         [] 
                   )
# 263 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'argNames));
# 1640 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'argNames)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             _1 :: _2 
                   )
# 264 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'argNames));
# 1652 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    [_1] 
                   )
# 265 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'argNames));
# 1663 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identifierOrPath)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                               FunctionEval(true, _1, _2) 
                   )
# 268 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'functionEval));
# 1675 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'identifierOrPath)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                           FunctionEval(false, _2, _3) 
                   )
# 269 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'functionEval));
# 1687 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  _1 :: _2 
                   )
# 272 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'args));
# 1699 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             [_1] 
                   )
# 273 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'args));
# 1710 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opNegate)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  _1 
                   )
# 276 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'arg));
# 1721 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'literalOrIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             _1 
                   )
# 277 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'arg));
# 1732 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                     _1 
                   )
# 278 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'arg));
# 1743 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op0)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 283 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op));
# 1754 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op0)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                          BinaryOperator("~=", _1, _3) 
                   )
# 286 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op0));
# 1766 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 287 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op0));
# 1777 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                      BinaryOperator("xor", _1, _3) 
                   )
# 291 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp1));
# 1789 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 292 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp1));
# 1800 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                     BinaryOperator("or", _1, _3) 
                   )
# 295 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp2));
# 1812 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 296 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp2));
# 1823 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logicalOp3)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                      BinaryOperator("and", _1, _3) 
                   )
# 299 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp3));
# 1835 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 300 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'logicalOp3));
# 1846 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              BinaryOperator("bw_xor", _1, _3) 
                   )
# 304 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp1));
# 1858 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 305 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp1));
# 1869 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                             BinaryOperator("bw_or", _1, _3) 
                   )
# 308 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp2));
# 1881 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 309 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp2));
# 1892 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp3)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              BinaryOperator("bw_and", _1, _3) 
                   )
# 312 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp3));
# 1904 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    _1 
                   )
# 313 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp3));
# 1915 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwiseOp4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                       BinaryOperator("bw_not", _1, _3) 
                   )
# 316 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp4));
# 1927 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 317 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwiseOp4));
# 1938 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            BinaryOperator("<", _1, _3) 
                   )
# 320 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 1950 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                      BinaryOperator("<=", _1, _3) 
                   )
# 321 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 1962 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                               BinaryOperator(">", _1, _3) 
                   )
# 322 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 1974 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                         BinaryOperator(">=", _1, _3) 
                   )
# 323 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 1986 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                             BinaryOperator("<>", _1, _3) 
                   )
# 324 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 1998 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                   BinaryOperator("=", _1, _3) 
                   )
# 325 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 2010 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                         BinaryOperator("=", _1, _3) 
                   )
# 326 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 2022 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                           _1 
                   )
# 327 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op4));
# 2033 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                               BinaryOperator("<<:", _1, _3) 
                   )
# 331 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwise_bit_shift));
# 2045 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                             BinaryOperator(":>>", _1, _3) 
                   )
# 332 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwise_bit_shift));
# 2057 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'bitwise_bit_shift)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                                BinaryOperator(":>>>", _1, _3) 
                   )
# 333 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwise_bit_shift));
# 2069 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 334 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'bitwise_bit_shift));
# 2080 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op5)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op6)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                           BinaryOperator("%%", _1, _3) 
                   )
# 337 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op5));
# 2092 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op6)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 338 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op5));
# 2103 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             BinaryOperator("+", _1, _3) 
                   )
# 341 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op6));
# 2115 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             BinaryOperator("-", _1, _3) 
                   )
# 342 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op6));
# 2127 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 343 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op6));
# 2138 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             BinaryOperator("*", _1, _3) 
                   )
# 346 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op7));
# 2150 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                           BinaryOperator("/", _1, _3) 
                   )
# 347 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op7));
# 2162 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op7)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                           BinaryOperator("%", _1, _3) 
                   )
# 348 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op7));
# 2174 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 349 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op7));
# 2185 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                       UnaryOperator("-", _2) 
                   )
# 352 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opNegate));
# 2196 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                    UnaryOperator("!", _2) 
                   )
# 355 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op8));
# 2207 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opNegate)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  _1 
                   )
# 356 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op8));
# 2218 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                          UnaryOperator("succ", _2) 
                   )
# 357 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op8));
# 2229 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                            UnaryOperator("pred", _2) 
                   )
# 358 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op8));
# 2240 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                             _1 
                   )
# 359 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op8));
# 2251 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'op9)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprMain)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                               BinaryOperator("**", _1, _3) 
                   )
# 362 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op9));
# 2263 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprMain)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                  _1 
                   )
# 363 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'op9));
# 2274 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 370 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                          Parens _3 
                   )
# 370 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'wrappedExpr));
# 2287 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              Convert.toExprList _3 
                   )
# 371 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'wrappedExpr));
# 2300 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                          Block [_3] 
                   )
# 374 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'block));
# 2313 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exprList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                              Block _3 
                   )
# 375 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'block));
# 2326 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'literalOrIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                             _1 
                   )
# 378 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2337 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                     _1 
                   )
# 379 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2348 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'functionEval)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                      _1 
                   )
# 380 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2359 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sendMessages)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                      _1 
                   )
# 381 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2370 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'func)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              _1 
                   )
# 382 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2381 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 383 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                            If(_2, _5, Some _8) 
                   )
# 383 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2396 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                        If(_2, _5, None) 
                   )
# 384 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2409 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                                IfNot(_2, _5, Some _8) 
                   )
# 385 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2424 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            IfNot(_2, _5, None) 
                   )
# 386 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2437 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optSep)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBar)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'matchingList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                        Match(_2, _6) 
                   )
# 387 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2451 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opFunctional)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                      _1 
                   )
# 388 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'exprMain));
# 2462 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opFunctional)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                           BinaryOperator("|>", _1, _3) 
                   )
# 392 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opFunctional));
# 2474 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opFunctional)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 393 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                            BinaryOperator("<|", _1, _3) 
                   )
# 393 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opFunctional));
# 2486 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opFunctional)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                 BinaryOperator(">>", _1, _3) 
                   )
# 394 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opFunctional));
# 2498 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opFunctional)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                                                                  BinaryOperator("<<", _1, _3) 
                   )
# 395 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opFunctional));
# 2510 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                              _1 
                   )
# 396 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fsy"
                 : 'opFunctional));
|]
# 2522 "c:\MyLang\Sage\Sage\Parsing.ParserImpl.fs"
let tables () : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 86;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : ast =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
